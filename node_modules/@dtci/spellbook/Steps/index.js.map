{"version":3,"file":"index.js","mappings":"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","sources":["webpack://@dtci/spellbook/webpack/universalModuleDefinition","webpack://@dtci/spellbook/webpack/bootstrap","webpack://@dtci/spellbook/webpack/runtime/compat get default export","webpack://@dtci/spellbook/webpack/runtime/define property getters","webpack://@dtci/spellbook/webpack/runtime/hasOwnProperty shorthand","webpack://@dtci/spellbook/webpack/runtime/make namespace object","webpack://@dtci/spellbook/external commonjs \"@babel/runtime/helpers/defineProperty\"","webpack://@dtci/spellbook/external commonjs \"@babel/runtime/helpers/objectWithoutProperties\"","webpack://@dtci/spellbook/external commonjs \"react\"","webpack://@dtci/spellbook/external commonjs \"classnames\"","webpack://@dtci/spellbook/external commonjs \"react/jsx-runtime\"","webpack://@dtci/spellbook/./src/Image/Image.tsx","webpack://@dtci/spellbook/./src/_utils/config.ts","webpack://@dtci/spellbook/./src/Icon/Icon.tsx","webpack://@dtci/spellbook/./src/Badge/Badge.tsx","webpack://@dtci/spellbook/./src/Steps/Steps.tsx","webpack://@dtci/spellbook/./src/Steps/Step.tsx"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(this, function() {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","var __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/helpers/defineProperty\");","var __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/helpers/objectWithoutProperties\");","var __WEBPACK_NAMESPACE_OBJECT__ = require(\"react\");","var __WEBPACK_NAMESPACE_OBJECT__ = require(\"classnames\");","var __WEBPACK_NAMESPACE_OBJECT__ = require(\"react/jsx-runtime\");","import { ComponentProps, forwardRef } from 'react';\nimport classNames from 'classnames';\n\n// Styles\nimport './Image.scss';\n\n// Types\nimport { TestMetadata } from 'types';\n\ntype Props = ComponentProps<'img'>;\nexport type ImageProps = ComponentProps<typeof Image> & {\n  testMetadata?: TestMetadata;\n};\n\nconst Image = forwardRef<HTMLImageElement, Props>(function InnerImage(\n  { className, alt = '', ...otherProps },\n  ref,\n) {\n  return (\n    <img\n      alt={alt}\n      className={classNames('sb-image', className)}\n      ref={ref}\n      {...otherProps}\n    />\n  );\n});\n\nexport default Image;\n","export const ASSET_URL = 'https://dtci-spellbook.s3-us-west-2.amazonaws.com';\n\nexport const IMAGE_URL = `${ASSET_URL}/img`;\n\nexport const ICON_URL = `${IMAGE_URL}/icons`;\n\nexport const STORIES_URL =\n  'https://gitlab.disney.com/dtci-bp-software-solutions/ui/spellbook/-/blob/develop/src';\n","import { FC, useMemo } from 'react';\nimport classNames from 'classnames';\n\n// Components\nimport Image from '../Image';\n\n// Styles\nimport './Icon.scss';\n\n// Types\nimport { FontAwesomePackage, TestMetadata } from 'types';\n\n// Utils\nimport { ICON_URL } from '../_utils/config';\n\nexport interface IconProps {\n  /**  Whether the component is from font-awesome (fa) or hosted on AWS (aws)*/\n  iconType: 'fa' | 'aws';\n  /** Size override for the icon: smaller (12x12), small (16x16), medium (20x20), large (32x32), larger (48x48) */\n  size?: 'smaller' | 'small' | 'medium' | 'large' | 'larger' | 'auto';\n  /**  The name of the font awesome icon OR an AWS hosted icon */\n  iconName: string;\n  /** Package used for font awesome icons */\n  faPackage?: FontAwesomePackage;\n  /** Class name that goes on the icon */\n  className?: string;\n  /** Label text to display */\n  altText?: string;\n  /** Label text for hover */\n  title?: string;\n  /** Sets test id */\n  testMetadata?: {\n    iconAWSImage?: TestMetadata;\n    iconFASpan?: TestMetadata;\n  };\n}\n\nconst Icon: FC<IconProps> = ({\n  size,\n  iconType,\n  faPackage = 'fab',\n  iconName,\n  className,\n  altText,\n  title,\n  testMetadata = {\n    iconAWSImage: { 'data-testid': 'aws-icon' },\n    iconFASpan: { 'data-testid': 'fa-icon' },\n  },\n}) => {\n  const iconClassNames = useMemo(\n    () =>\n      classNames(\n        'sb-icon',\n        {\n          'sb-icon__size-auto': size === 'auto',\n          'sb-icon__size-smaller': size === 'smaller',\n          'sb-icon__size-small': size === 'small',\n          'sb-icon__size-medium': size === 'medium',\n          'sb-icon__size-large': size === 'large',\n          'sb-icon__size-larger': size === 'larger',\n        },\n        className,\n      ),\n    [size, className],\n  );\n\n  if (iconType === 'aws') {\n    return (\n      <Image\n        className={iconClassNames}\n        alt={altText}\n        title={title}\n        {...testMetadata?.iconAWSImage}\n        src={`${ICON_URL}/${iconName}.svg`}\n      />\n    );\n  } else {\n    return (\n      <>\n        <span\n          {...testMetadata?.iconFASpan}\n          className={classNames([\n            `${faPackage} ${iconName} ${iconClassNames}`,\n            faPackage,\n            iconName,\n          ])}\n          aria-label={altText}\n          title={title}\n        />\n      </>\n    );\n  }\n};\n\nexport default Icon;\n","import { CSSProperties, FC, SyntheticEvent, useMemo } from 'react';\nimport classNames from 'classnames';\nimport Icon from '../Icon';\n\n// Styles\nimport './Badge.scss';\n\n// Types\nimport { BadgeTypes, TestMetadata } from 'types';\n\nexport interface BadgeProps {\n  /** Class name */\n  className?: string;\n  /** Style */\n  style?: CSSProperties;\n  /** Shape type: dot, circle, pill */\n  shape?: 'dot' | 'circle' | 'pill' | 'status';\n  /** Size: small (height: 24px), medium (height: 32px), large (height: 40px) */\n  size?: 'smaller' | 'small' | 'medium' | 'large';\n  /** Color: primary, secondary, base, error, success, warning*/\n  color?: BadgeTypes;\n  /** Sets a light background with dark text  */\n  light?: boolean;\n  /** Role */\n  badgeRole?: string;\n  /** Determine if dismissable */\n  showClose?: boolean;\n  /** Close button function */\n  onClose?: (e: SyntheticEvent) => void;\n  // Test IDs for sections of Badge\n  testMetadata?: TestMetadata;\n  /** Width: large is 16ch with ellipsis*/\n  width?: 'large' | 'auto';\n  /** Current status  */\n  title?: string;\n  /** Icon */\n  iconOnly?: boolean;\n}\n\nconst Badge: FC<BadgeProps> = ({\n  className,\n  style,\n  shape,\n  size,\n  color,\n  light,\n  badgeRole,\n  children,\n  showClose,\n  testMetadata,\n  width,\n  title,\n  iconOnly,\n  ...otherProps\n}) => {\n  const badgeClassNames = useMemo(\n    () =>\n      classNames(\n        'sb-badge',\n        {\n          'sb-badge_dot': !iconOnly && shape === 'dot',\n          'sb-badge_circle': shape === 'circle' || iconOnly,\n          'sb-badge_status': !iconOnly && shape === 'status',\n          'sb-badge_pill': (!shape && !iconOnly) || shape === 'pill',\n          'sb-badge_smaller': size === 'smaller',\n          'sb-badge_small': !size || size === 'small',\n          'sb-badge_medium': size === 'medium',\n          'sb-badge_large': size === 'large',\n          'sb-badge_primary': color === 'primary',\n          'sb-badge_secondary': color === 'secondary',\n          'sb-badge_base': color === 'base',\n          'sb-badge_error': color === 'error',\n          'sb-badge_success': color === 'success',\n          'sb-badge_warning': color === 'warning',\n          'sb-badge_active': color === 'active',\n          'sb-badge_light': light,\n          'sb-badge_closable': showClose,\n          'sb-badge_width-auto': width === 'auto',\n          'sb-badge_width-large': width === 'large',\n          'sb-badge_icon': iconOnly,\n        },\n        className,\n      ),\n    [className, color, light, shape, showClose, size, width, iconOnly],\n  );\n\n  return (\n    <div\n      {...otherProps}\n      className={badgeClassNames}\n      style={style}\n      role={badgeRole}\n      title={title}\n      {...testMetadata}\n    >\n      {shape === 'status' && (\n        <Icon\n          className=\"sb-badge_status-icon\"\n          iconType=\"fa\"\n          faPackage=\"fas\"\n          iconName=\"fa-circle\"\n          size=\"smaller\"\n        />\n      )}\n      {children}\n    </div>\n  );\n};\n\nexport default Badge;\n","import {\n  createContext,\n  DetailedHTMLProps,\n  FC,\n  forwardRef,\n  HTMLProps,\n  OlHTMLAttributes,\n  useMemo,\n} from 'react';\nimport classNames from 'classnames';\n\n// Styles\nimport './Steps.scss';\n\n// Types\nimport { TestMetadata } from 'types';\nimport React from 'react';\n\ninterface StepsContextProps {\n  /** Show steps connected */\n  connected?: boolean;\n  /** Selected Step  */\n  currentStep: number;\n  /** Steps fills the width of the container  */\n  fullWidth?: boolean;\n  /** Badge mode of Steps */\n  mode: 'text' | 'number' | 'both';\n  /** Direction of Steps */\n  orientation?: 'horizontal' | 'vertical';\n}\nexport const StepsContext = createContext<StepsContextProps>({\n  connected: false,\n  currentStep: 0,\n  fullWidth: false,\n  mode: 'number',\n  orientation: 'horizontal',\n});\n\nexport interface StepsProps\n  extends DetailedHTMLProps<\n    OlHTMLAttributes<HTMLOListElement>,\n    HTMLOListElement\n  > {\n  /** Classname of Steps */\n  className?: string;\n  /** Show steps connected */\n  connected?: boolean;\n  /** Active step */\n  currentStep: number;\n  /** Fill container's width */\n  fullWidth?: boolean;\n  /** Badge mode of Steps */\n  mode?: 'text' | 'number' | 'both';\n  /** Direction of Steps */\n  orientation?: 'horizontal' | 'vertical';\n  /** Test data IDs for Steps */\n  testMetadata?: TestMetadata;\n}\n\nconst Steps = forwardRef<HTMLOListElement, StepsProps>(\n  (\n    {\n      children,\n      className,\n      connected,\n      currentStep,\n      fullWidth,\n      mode = 'number',\n      type = '1',\n      orientation = 'horizontal',\n      ...otherProps\n    },\n    ref,\n  ) => {\n    const stepsClassNames = useMemo(\n      () =>\n        classNames(\n          'sb-steps',\n          {\n            'sb-steps_full-width': fullWidth,\n            'sb-steps_connected': connected,\n            'sb-steps_vertical': orientation === 'vertical',\n          },\n          className,\n        ),\n      [connected, fullWidth, className, orientation],\n    );\n\n    const contextValue = useMemo(\n      () => ({\n        connected,\n        currentStep,\n        fullWidth,\n        mode,\n        orientation,\n      }),\n      [connected, currentStep, fullWidth, mode, orientation],\n    );\n\n    return (\n      <StepsContext.Provider value={contextValue}>\n        <ol ref={ref} type={type} className={stepsClassNames} {...otherProps}>\n          {children}\n        </ol>\n      </StepsContext.Provider>\n    );\n  },\n);\n\nSteps.displayName = 'Steps';\nexport default Steps as FC<HTMLProps<HTMLOListElement> & StepsProps>;\n","import {\n  DetailedHTMLProps,\n  FC,\n  forwardRef,\n  HTMLProps,\n  LiHTMLAttributes,\n  ReactElement,\n  useContext,\n  useMemo,\n} from 'react';\nimport classNames from 'classnames';\n\n// Components\nimport Badge from '../Badge';\nimport Icon from '../Icon';\n\n// Styles\nimport './Step.scss';\n\n// Context\nimport { StepsContext } from './Steps';\n\n// Types\nimport { TestMetadata } from 'types';\n\nexport interface StepProps\n  extends DetailedHTMLProps<LiHTMLAttributes<HTMLLIElement>, HTMLLIElement> {\n  /** index of the Step */\n  index: number;\n  /** Classname of Step */\n  className?: string;\n  /** Indicator text */\n  indicator?: ReactElement | number | string;\n  /** Test data IDs for Step */\n  testMetadata?: TestMetadata;\n}\n\nconst Step = forwardRef<HTMLLIElement, StepProps>(\n  ({ index, children, className, indicator, ...otherProps }, ref) => {\n    const { connected, currentStep, mode, orientation } =\n      useContext(StepsContext);\n\n    const state = useMemo(() => {\n      if (currentStep === index) return 'in-progress';\n      if (currentStep > index) return 'completed';\n      return 'unstarted';\n    }, [currentStep, index]);\n\n    const textComponent: JSX.Element = (\n      <div\n        className={classNames(\n          `sb-step_${connected ? 'connected' : 'unconnected'}_text_${state}`,\n        )}\n      >\n        {children}\n      </div>\n    );\n\n    const iconComponent: JSX.Element = (\n      <div className=\"sb-step-badge\">\n        {state === 'completed' ? (\n          <Icon iconType=\"fa\" iconName=\"fa-check\" faPackage=\"fas\" />\n        ) : (\n          indicator\n        )}\n      </div>\n    );\n\n    const connectedStep = {\n      text: textComponent,\n      number: iconComponent,\n      both: (\n        <>\n          {iconComponent}\n          {textComponent}\n        </>\n      ),\n    };\n\n    return (\n      <li\n        ref={ref}\n        className={classNames(\n          'sb-step',\n          {\n            'sb-step_connected': connected,\n            'sb-step_unconnected': !connected,\n            'sb-step_completed': state === 'completed',\n            'sb-step_vertical': orientation === 'vertical',\n          },\n          className,\n        )}\n        {...otherProps}\n      >\n        {connected ? (\n          <Badge\n            shape={mode === 'number' ? 'circle' : 'pill'}\n            className={classNames(`sb-step-badge_${state}`, {\n              'sb-step_both': mode === 'both',\n            })}\n          >\n            {connectedStep[mode]}\n          </Badge>\n        ) : (\n          <div\n            className={classNames({\n              'sb-step_both': mode === 'both',\n            })}\n          >\n            {mode !== 'text' && (\n              <Badge\n                shape=\"circle\"\n                className={classNames(`sb-step-badge_${state}`)}\n              >\n                {iconComponent}\n              </Badge>\n            )}\n            {mode !== 'number' && textComponent}\n          </div>\n        )}\n      </li>\n    );\n  },\n);\n\nStep.displayName = 'Step';\nexport default Step as FC<HTMLProps<HTMLLIElement> & StepProps>;\n"],"names":["root","factory","exports","module","define","amd","a","i","this","__webpack_require__","getter","__esModule","d","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","require","Image","forwardRef","ref","className","alt","otherProps","classNames","IMAGE_URL","ICON_URL","size","iconType","faPackage","iconName","altText","title","testMetadata","iconAWSImage","iconFASpan","iconClassNames","useMemo","src","style","shape","color","light","badgeRole","children","showClose","width","iconOnly","badgeClassNames","role","StepsContext","createContext","connected","currentStep","fullWidth","mode","orientation","Steps","type","stepsClassNames","contextValue","Provider","displayName","Step","index","indicator","useContext","state","textComponent","iconComponent","connectedStep","text","number","both"],"sourceRoot":""}