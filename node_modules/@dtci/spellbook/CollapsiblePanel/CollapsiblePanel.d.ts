import { FC, ReactNode } from 'react';
import './CollapsiblePanel.scss';
import { TestMetadata } from 'types';
export interface CollapsiblePanelProps {
    /** Elements to Wrap **/
    children?: ReactNode;
    /** Class name **/
    className?: string;
    /** Determines if panel is open by default when uncontrolled, ignored if `isOpen` is used **/
    isOpenByDefault?: boolean;
    /** Determines if panel is open **/
    isOpen?: boolean;
    /** Callback run when changing the open state is requested **/
    onToggleOpen?: (nextValue: boolean) => void;
    /** Content element id, will generate a random one if not provided **/
    contentId?: string;
    /** Header button element id, will generate a random one if not provided **/
    headerButtonId?: string;
    /** remove the border of the component **/
    borderless?: boolean;
    /** Element to toggle content  **/
    toggleBar?: ReactNode;
    /** Toggle bar location in relation to content - top (default), bottom  **/
    toggleBarLocation?: 'top' | 'bottom';
    /** Toggle bar clickable area */
    toggleBarClick?: 'icon' | 'full';
    /** toggleBar horizontal alignment alignment - left (default), right, center **/
    toggleHorizontalAlignment?: 'left' | 'right' | 'center';
    /** type for button on the collapsible header*/
    buttonType?: 'button' | 'submit' | 'reset';
    testMetadata?: {
        collapsiblePanel?: TestMetadata;
        content?: TestMetadata;
    };
    /** Function that returns an element to toggle content  **/
    renderToggleBar?: (isOpen: boolean) => JSX.Element;
    /** ToggleIcon */
    toggleIcon?: string;
    /** toggleClass */
    toggleClass?: string;
    /** Selectable */
    selectable?: boolean;
    /** Selected */
    selected?: boolean;
}
declare const CollapsiblePanel: FC<CollapsiblePanelProps>;
export default CollapsiblePanel;
