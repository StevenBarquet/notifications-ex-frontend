{"version":3,"file":"index.js","mappings":"CAAA,SAA2CA,EAAMC,GAChD,GAAsB,iBAAZC,SAA0C,iBAAXC,OACxCA,OAAOD,QAAUD,SACb,GAAqB,mBAAXG,QAAyBA,OAAOC,IAC9CD,OAAO,GAAIH,OACP,CACJ,IAAIK,EAAIL,IACR,IAAI,IAAIM,KAAKD,GAAuB,iBAAZJ,QAAuBA,QAAUF,GAAMO,GAAKD,EAAEC,EACvE,CACA,CATD,CASGC,MAAM,WACT,O,wBCTA,IAAIC,EAAsB,CCA1BA,EAAwB,SAASN,GAChC,IAAIO,EAASP,GAAUA,EAAOQ,WAC7B,WAAa,OAAOR,EAAgB,OAAG,EACvC,WAAa,OAAOA,CAAQ,EAE7B,OADAM,EAAoBG,EAAEF,EAAQ,CAAEJ,EAAGI,IAC5BA,CACR,ECNAD,EAAwB,SAASP,EAASW,GACzC,IAAI,IAAIC,KAAOD,EACXJ,EAAoBM,EAAEF,EAAYC,KAASL,EAAoBM,EAAEb,EAASY,IAC5EE,OAAOC,eAAef,EAASY,EAAK,CAAEI,YAAY,EAAMC,IAAKN,EAAWC,IAG3E,ECPAL,EAAwB,SAASW,EAAKC,GAAQ,OAAOL,OAAOM,UAAUC,eAAeC,KAAKJ,EAAKC,EAAO,ECCtGZ,EAAwB,SAASP,GACX,oBAAXuB,QAA0BA,OAAOC,aAC1CV,OAAOC,eAAef,EAASuB,OAAOC,YAAa,CAAEC,MAAO,WAE7DX,OAAOC,eAAef,EAAS,aAAc,CAAEyB,OAAO,GACvD,G,4ECNA,IAAI,EAA+BC,QAAQ,yC,SCAvC,EAA+BA,QAAQ,kD,SCAvC,EAA+BA,QAAQ,c,SCAvC,EAA+BA,QAAQ,qB,2mBCkB3C,IAkBA,EAlBoC,SAAH,GAK3B,IAJJC,EAAS,EAATA,UACAC,EAAY,EAAZA,aACAC,EAAQ,EAARA,SACGC,EAAK,SAER,OACE,uBACEH,UAAWI,IAAW,cAAeJ,IACjCG,GACAF,GAAY,eAEhB,gBAAKD,UAAU,qCACdE,KAGP,EClCI,EAA+BH,QAAQ,S,oPCc3C,IAAMM,GAAQC,EAAAA,EAAAA,aAAoC,SAAoB,EAEpEC,GACA,IAFEP,EAAS,EAATA,UAAS,IAAEQ,IAAAA,OAAG,IAAG,KAAE,EAAKC,EAAU,SAGpC,OACE,e,iWAAA,EACED,IAAKA,EACLR,UAAWI,IAAW,WAAYJ,GAClCO,IAAKA,GACDE,GAGV,IAEA,IC1BaC,EAAY,GAAH,OAFG,oDAEY,QAExBC,EAAW,GAAH,OAAMD,EAAS,U,ikBCiCpC,IA0DA,EA1D4B,SAAH,GAYnB,IAXJE,EAAI,EAAJA,KACAC,EAAQ,EAARA,SAAQ,IACRC,UAAAA,OAAS,IAAG,QAAK,EACjBC,EAAQ,EAARA,SACAf,EAAS,EAATA,UACAgB,EAAO,EAAPA,QACAC,EAAK,EAALA,MAAK,IACLhB,aAAAA,OAAY,IAAG,GACbiB,aAAc,CAAE,cAAe,YAC/BC,WAAY,CAAE,cAAe,YAC9B,EAEKC,GAAiBC,EAAAA,EAAAA,UACrB,kBACEjB,IACE,UACA,CACE,qBAA+B,SAATQ,EACtB,wBAAkC,YAATA,EACzB,sBAAgC,UAATA,EACvB,uBAAiC,WAATA,EACxB,sBAAgC,UAATA,EACvB,uBAAiC,WAATA,GAE1BZ,EACD,GACH,CAACY,EAAMZ,IAGT,MAAiB,QAAba,GAEA,SAAC,EAAK,KACJb,UAAWoB,EACXZ,IAAKQ,EACLC,MAAOA,GACHhB,aAAY,EAAZA,EAAciB,cAAY,IAC9BI,IAAG,UAAKX,EAAQ,YAAII,EAAQ,YAK9B,+BACE,uBACMd,aAAY,EAAZA,EAAckB,YAAU,IAC5BnB,UAAWI,IAAW,CAAC,GAAD,OACjBU,EAAS,YAAIC,EAAQ,YAAIK,GAC5BN,EACAC,IAEF,aAAYC,EACZC,MAAOA,MAKjB,E,qsBCtDA,IAsEA,EAtE8B,SAAH,GAerB,IAdJjB,EAAS,EAATA,UACAuB,EAAK,EAALA,MACAC,EAAK,EAALA,MACAZ,EAAI,EAAJA,KACAa,EAAK,EAALA,MACAC,EAAK,EAALA,MACAC,EAAS,EAATA,UACAzB,EAAQ,EAARA,SACA0B,EAAS,EAATA,UACA3B,EAAY,EAAZA,aACA4B,EAAK,EAALA,MACAZ,EAAK,EAALA,MACAa,EAAQ,EAARA,SACGrB,EAAU,SAEPsB,GAAkBV,EAAAA,EAAAA,UACtB,kBACEjB,IACE,WACA,CACE,gBAAiB0B,GAAsB,QAAVN,EAC7B,kBAA6B,WAAVA,GAAsBM,EACzC,mBAAoBA,GAAsB,WAAVN,EAChC,iBAAmBA,IAAUM,GAAuB,SAAVN,EAC1C,mBAA6B,YAATZ,EACpB,kBAAmBA,GAAiB,UAATA,EAC3B,kBAA4B,WAATA,EACnB,iBAA2B,UAATA,EAClB,mBAA8B,YAAVa,EACpB,qBAAgC,cAAVA,EACtB,gBAA2B,SAAVA,EACjB,iBAA4B,UAAVA,EAClB,mBAA8B,YAAVA,EACpB,mBAA8B,YAAVA,EACpB,kBAA6B,WAAVA,EACnB,iBAAkBC,EAClB,oBAAqBE,EACrB,sBAAiC,SAAVC,EACvB,uBAAkC,UAAVA,EACxB,gBAAiBC,GAEnB9B,EACD,GACH,CAACA,EAAWyB,EAAOC,EAAOF,EAAOI,EAAWhB,EAAMiB,EAAOC,IAG3D,OACE,yBACMrB,GAAU,IACdT,UAAW+B,EACXR,MAAOA,EACPS,KAAML,EACNV,MAAOA,GACHhB,GAAY,cAEL,WAAVuB,IACC,SAAC,EAAI,CACHxB,UAAU,uBACVa,SAAS,KACTC,UAAU,MACVC,SAAS,YACTH,KAAK,YAGRV,KAGP,E,ipBC7EA,IAgDA,EAhD4B,SAAH,GASnB,IARJ+B,EAAI,EAAJA,KAAI,IACJC,WAAAA,OAAU,IAAG,GAAK,MAClBT,MAAAA,OAAK,IAAG,SAAM,EACdzB,EAAS,EAATA,UACAC,EAAY,EAAZA,aACAC,EAAQ,EAARA,SAAQ,IACRc,QAAAA,OAAO,IAAG,SAAM,EACbb,EAAK,SAER,OACE,sBACEH,UAAWI,IAAW,UAAWJ,EAAW,CAC1C,kBAAmBkC,KAEjB/B,GACAF,GAAY,aAEfiC,GACC,gBAAKlC,UAAU,kCAAiC,SAAEE,KAElD,iCACE,SAAC,EAAK,CACJsB,MAAM,SACNZ,KAAK,QACLa,MAAOA,EACPC,OAAK,EACLI,UAAQ,EACR9B,UAAU,qBAAoB,SAE7BiC,IACC,SAAC,EAAI,CACHnB,UAAU,MACVD,SAAS,KACTb,UAAU,oBACVgB,QAASA,EACTD,SAAUkB,EACVrB,KAAK,eAIX,gBAAKZ,UAAU,yBAAwB,SAAEE,SAKnD,E","sources":["webpack://@dtci/spellbook/webpack/universalModuleDefinition","webpack://@dtci/spellbook/webpack/bootstrap","webpack://@dtci/spellbook/webpack/runtime/compat get default export","webpack://@dtci/spellbook/webpack/runtime/define property getters","webpack://@dtci/spellbook/webpack/runtime/hasOwnProperty shorthand","webpack://@dtci/spellbook/webpack/runtime/make namespace object","webpack://@dtci/spellbook/external commonjs \"@babel/runtime/helpers/defineProperty\"","webpack://@dtci/spellbook/external commonjs \"@babel/runtime/helpers/objectWithoutProperties\"","webpack://@dtci/spellbook/external commonjs \"classnames\"","webpack://@dtci/spellbook/external commonjs \"react/jsx-runtime\"","webpack://@dtci/spellbook/./src/TaskList/TaskList.tsx","webpack://@dtci/spellbook/external commonjs \"react\"","webpack://@dtci/spellbook/./src/Image/Image.tsx","webpack://@dtci/spellbook/./src/_utils/config.ts","webpack://@dtci/spellbook/./src/Icon/Icon.tsx","webpack://@dtci/spellbook/./src/Badge/Badge.tsx","webpack://@dtci/spellbook/./src/TaskList/Task.tsx"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(this, function() {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","var __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/helpers/defineProperty\");","var __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/helpers/objectWithoutProperties\");","var __WEBPACK_NAMESPACE_OBJECT__ = require(\"classnames\");","var __WEBPACK_NAMESPACE_OBJECT__ = require(\"react/jsx-runtime\");","import { FC, HTMLAttributes, ReactNode } from 'react';\nimport classNames from 'classnames';\n\n// Styles\nimport './TaskList.scss';\n\n// Types\nimport { TestMetadata } from 'types';\n\nexport interface TaskListProps extends HTMLAttributes<HTMLDivElement> {\n  /* Custom Class Name */\n  className?: string;\n  /* Test Metadata */\n  testMetadata?: TestMetadata;\n  /* Children to render */\n  children: ReactNode;\n}\n\nconst TaskList: FC<TaskListProps> = ({\n  className,\n  testMetadata,\n  children,\n  ...other\n}) => {\n  return (\n    <div\n      className={classNames('sb-tasklist', className)}\n      {...other}\n      {...testMetadata}\n    >\n      <div className=\"sb-tasklist_vertical-line-marker\" />\n      {children}\n    </div>\n  );\n};\n\nexport default TaskList;\n","var __WEBPACK_NAMESPACE_OBJECT__ = require(\"react\");","import { ComponentProps, forwardRef } from 'react';\nimport classNames from 'classnames';\n\n// Styles\nimport './Image.scss';\n\n// Types\nimport { TestMetadata } from 'types';\n\ntype Props = ComponentProps<'img'>;\nexport type ImageProps = ComponentProps<typeof Image> & {\n  testMetadata?: TestMetadata;\n};\n\nconst Image = forwardRef<HTMLImageElement, Props>(function InnerImage(\n  { className, alt = '', ...otherProps },\n  ref,\n) {\n  return (\n    <img\n      alt={alt}\n      className={classNames('sb-image', className)}\n      ref={ref}\n      {...otherProps}\n    />\n  );\n});\n\nexport default Image;\n","export const ASSET_URL = 'https://dtci-spellbook.s3-us-west-2.amazonaws.com';\n\nexport const IMAGE_URL = `${ASSET_URL}/img`;\n\nexport const ICON_URL = `${IMAGE_URL}/icons`;\n\nexport const STORIES_URL =\n  'https://gitlab.disney.com/dtci-bp-software-solutions/ui/spellbook/-/blob/develop/src';\n","import { FC, useMemo } from 'react';\nimport classNames from 'classnames';\n\n// Components\nimport Image from '../Image';\n\n// Styles\nimport './Icon.scss';\n\n// Types\nimport { FontAwesomePackage, TestMetadata } from 'types';\n\n// Utils\nimport { ICON_URL } from '../_utils/config';\n\nexport interface IconProps {\n  /**  Whether the component is from font-awesome (fa) or hosted on AWS (aws)*/\n  iconType: 'fa' | 'aws';\n  /** Size override for the icon: smaller (12x12), small (16x16), medium (20x20), large (32x32), larger (48x48) */\n  size?: 'smaller' | 'small' | 'medium' | 'large' | 'larger' | 'auto';\n  /**  The name of the font awesome icon OR an AWS hosted icon */\n  iconName: string;\n  /** Package used for font awesome icons */\n  faPackage?: FontAwesomePackage;\n  /** Class name that goes on the icon */\n  className?: string;\n  /** Label text to display */\n  altText?: string;\n  /** Label text for hover */\n  title?: string;\n  /** Sets test id */\n  testMetadata?: {\n    iconAWSImage?: TestMetadata;\n    iconFASpan?: TestMetadata;\n  };\n}\n\nconst Icon: FC<IconProps> = ({\n  size,\n  iconType,\n  faPackage = 'fab',\n  iconName,\n  className,\n  altText,\n  title,\n  testMetadata = {\n    iconAWSImage: { 'data-testid': 'aws-icon' },\n    iconFASpan: { 'data-testid': 'fa-icon' },\n  },\n}) => {\n  const iconClassNames = useMemo(\n    () =>\n      classNames(\n        'sb-icon',\n        {\n          'sb-icon__size-auto': size === 'auto',\n          'sb-icon__size-smaller': size === 'smaller',\n          'sb-icon__size-small': size === 'small',\n          'sb-icon__size-medium': size === 'medium',\n          'sb-icon__size-large': size === 'large',\n          'sb-icon__size-larger': size === 'larger',\n        },\n        className,\n      ),\n    [size, className],\n  );\n\n  if (iconType === 'aws') {\n    return (\n      <Image\n        className={iconClassNames}\n        alt={altText}\n        title={title}\n        {...testMetadata?.iconAWSImage}\n        src={`${ICON_URL}/${iconName}.svg`}\n      />\n    );\n  } else {\n    return (\n      <>\n        <span\n          {...testMetadata?.iconFASpan}\n          className={classNames([\n            `${faPackage} ${iconName} ${iconClassNames}`,\n            faPackage,\n            iconName,\n          ])}\n          aria-label={altText}\n          title={title}\n        />\n      </>\n    );\n  }\n};\n\nexport default Icon;\n","import { CSSProperties, FC, SyntheticEvent, useMemo } from 'react';\nimport classNames from 'classnames';\nimport Icon from '../Icon';\n\n// Styles\nimport './Badge.scss';\n\n// Types\nimport { BadgeTypes, TestMetadata } from 'types';\n\nexport interface BadgeProps {\n  /** Class name */\n  className?: string;\n  /** Style */\n  style?: CSSProperties;\n  /** Shape type: dot, circle, pill */\n  shape?: 'dot' | 'circle' | 'pill' | 'status';\n  /** Size: small (height: 24px), medium (height: 32px), large (height: 40px) */\n  size?: 'smaller' | 'small' | 'medium' | 'large';\n  /** Color: primary, secondary, base, error, success, warning*/\n  color?: BadgeTypes;\n  /** Sets a light background with dark text  */\n  light?: boolean;\n  /** Role */\n  badgeRole?: string;\n  /** Determine if dismissable */\n  showClose?: boolean;\n  /** Close button function */\n  onClose?: (e: SyntheticEvent) => void;\n  // Test IDs for sections of Badge\n  testMetadata?: TestMetadata;\n  /** Width: large is 16ch with ellipsis*/\n  width?: 'large' | 'auto';\n  /** Current status  */\n  title?: string;\n  /** Icon */\n  iconOnly?: boolean;\n}\n\nconst Badge: FC<BadgeProps> = ({\n  className,\n  style,\n  shape,\n  size,\n  color,\n  light,\n  badgeRole,\n  children,\n  showClose,\n  testMetadata,\n  width,\n  title,\n  iconOnly,\n  ...otherProps\n}) => {\n  const badgeClassNames = useMemo(\n    () =>\n      classNames(\n        'sb-badge',\n        {\n          'sb-badge_dot': !iconOnly && shape === 'dot',\n          'sb-badge_circle': shape === 'circle' || iconOnly,\n          'sb-badge_status': !iconOnly && shape === 'status',\n          'sb-badge_pill': (!shape && !iconOnly) || shape === 'pill',\n          'sb-badge_smaller': size === 'smaller',\n          'sb-badge_small': !size || size === 'small',\n          'sb-badge_medium': size === 'medium',\n          'sb-badge_large': size === 'large',\n          'sb-badge_primary': color === 'primary',\n          'sb-badge_secondary': color === 'secondary',\n          'sb-badge_base': color === 'base',\n          'sb-badge_error': color === 'error',\n          'sb-badge_success': color === 'success',\n          'sb-badge_warning': color === 'warning',\n          'sb-badge_active': color === 'active',\n          'sb-badge_light': light,\n          'sb-badge_closable': showClose,\n          'sb-badge_width-auto': width === 'auto',\n          'sb-badge_width-large': width === 'large',\n          'sb-badge_icon': iconOnly,\n        },\n        className,\n      ),\n    [className, color, light, shape, showClose, size, width, iconOnly],\n  );\n\n  return (\n    <div\n      {...otherProps}\n      className={badgeClassNames}\n      style={style}\n      role={badgeRole}\n      title={title}\n      {...testMetadata}\n    >\n      {shape === 'status' && (\n        <Icon\n          className=\"sb-badge_status-icon\"\n          iconType=\"fa\"\n          faPackage=\"fas\"\n          iconName=\"fa-circle\"\n          size=\"smaller\"\n        />\n      )}\n      {children}\n    </div>\n  );\n};\n\nexport default Badge;\n","import { FC, HTMLAttributes, ReactNode } from 'react';\nimport classNames from 'classnames';\n\n// Components\nimport Icon from '../Icon';\nimport Badge from '../Badge';\n\n// Types\nimport { BadgeTypes, TestMetadata } from 'types';\n\n// Styles\nimport './Task.scss';\n\nexport interface TaskProps extends HTMLAttributes<HTMLDivElement> {\n  /* Font Awesome Icon Name */\n  icon?: string;\n  /* Hide the icon */\n  iconHidden?: boolean;\n  /* Color of the icon */\n  color?: BadgeTypes;\n  /* Custom class name */\n  className?: string;\n  /* Test Metadata */\n  testMetadata?: TestMetadata;\n  /* Alt-Text of the Icon */\n  altText?: string;\n  /** Elements to Wrap */\n  children: ReactNode;\n}\n\nconst Task: FC<TaskProps> = ({\n  icon,\n  iconHidden = false,\n  color = 'base',\n  className,\n  testMetadata,\n  children,\n  altText = 'Task',\n  ...other\n}) => {\n  return (\n    <div\n      className={classNames('sb-task', className, {\n        'sb-task--badge': !iconHidden,\n      })}\n      {...other}\n      {...testMetadata}\n    >\n      {iconHidden ? (\n        <div className=\"sb-task_task-container-no-badge\">{children}</div>\n      ) : (\n        <>\n          <Badge\n            shape=\"circle\"\n            size=\"small\"\n            color={color}\n            light\n            iconOnly\n            className=\"sb-task_task-badge\"\n          >\n            {icon && (\n              <Icon\n                faPackage=\"fas\"\n                iconType=\"fa\"\n                className=\"sb-task_task-icon\"\n                altText={altText}\n                iconName={icon}\n                size=\"smaller\"\n              />\n            )}\n          </Badge>\n          <div className=\"sb-task_task-container\">{children}</div>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Task;\n"],"names":["root","factory","exports","module","define","amd","a","i","this","__webpack_require__","getter","__esModule","d","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","require","className","testMetadata","children","other","classNames","Image","forwardRef","ref","alt","otherProps","IMAGE_URL","ICON_URL","size","iconType","faPackage","iconName","altText","title","iconAWSImage","iconFASpan","iconClassNames","useMemo","src","style","shape","color","light","badgeRole","showClose","width","iconOnly","badgeClassNames","role","icon","iconHidden"],"sourceRoot":""}