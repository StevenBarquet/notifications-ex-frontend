{"version":3,"file":"index.js","mappings":"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","sources":["webpack://@dtci/spellbook/webpack/universalModuleDefinition","webpack://@dtci/spellbook/webpack/bootstrap","webpack://@dtci/spellbook/webpack/runtime/compat get default export","webpack://@dtci/spellbook/webpack/runtime/define property getters","webpack://@dtci/spellbook/webpack/runtime/hasOwnProperty shorthand","webpack://@dtci/spellbook/webpack/runtime/make namespace object","webpack://@dtci/spellbook/external commonjs \"@babel/runtime/helpers/defineProperty\"","webpack://@dtci/spellbook/external commonjs \"@babel/runtime/helpers/objectWithoutProperties\"","webpack://@dtci/spellbook/external commonjs \"classnames\"","webpack://@dtci/spellbook/external commonjs \"@tippyjs/react\"","webpack://@dtci/spellbook/external commonjs \"react/jsx-runtime\"","webpack://@dtci/spellbook/./src/Popover/Popover.tsx","webpack://@dtci/spellbook/./src/Tooltip/Tooltip.tsx","webpack://@dtci/spellbook/external commonjs \"react\"","webpack://@dtci/spellbook/external commonjs \"tippy.js\"","webpack://@dtci/spellbook/./src/Image/Image.tsx","webpack://@dtci/spellbook/./src/_utils/config.ts","webpack://@dtci/spellbook/./src/Icon/Icon.tsx","webpack://@dtci/spellbook/./src/TooltipTemplate/TooltipTemplate.tsx","webpack://@dtci/spellbook/./src/Field/Field.tsx"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(this, function() {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","var __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/helpers/defineProperty\");","var __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/helpers/objectWithoutProperties\");","var __WEBPACK_NAMESPACE_OBJECT__ = require(\"classnames\");","var __WEBPACK_NAMESPACE_OBJECT__ = require(\"@tippyjs/react\");","var __WEBPACK_NAMESPACE_OBJECT__ = require(\"react/jsx-runtime\");","import { FC, ReactNode } from 'react';\nimport classNames from 'classnames';\nimport Tippy, { TippyProps } from '@tippyjs/react';\n\n// Styles\nimport './Popover.scss';\nimport 'tippy.js/dist/tippy.css';\nimport 'tippy.js/themes/light.css';\nimport 'tippy.js/themes/light-border.css';\n\n// Types\nimport { TestMetadata } from 'types';\n\nexport interface PopoverProps {\n  /** Wrapped element that will toggle the popover */\n  children: ReactNode;\n  /** Class name */\n  className?: string;\n  /** Content Class name */\n  contentClassName?: string;\n  /** The actual content of the popover */\n  popoverContent: TippyProps['content'];\n  /** Props to be passed to the instanced Tippy component */\n  tippyProps?: TippyProps;\n  /** Prop to control hide/show behaviour */\n  visible?: boolean;\n  /** Test IDs for component sections */\n  testMetadata?: {\n    popover?: TestMetadata;\n    popoverContent?: TestMetadata;\n  };\n}\n\nconst defaulTippyProps: TippyProps = {\n  arrow: false,\n};\n\nconst Popover: FC<PopoverProps> = ({\n  className,\n  contentClassName,\n  children,\n  popoverContent,\n  tippyProps,\n  testMetadata,\n  visible,\n}) => {\n  return (\n    <Tippy\n      {...defaulTippyProps}\n      {...tippyProps}\n      className={classNames('sb-popover', className)}\n      visible={visible}\n      content={popoverContent}\n      {...testMetadata?.popover}\n    >\n      <div\n        className={classNames('sb-popover__content', contentClassName)}\n        {...testMetadata?.popoverContent}\n      >\n        {children}\n      </div>\n    </Tippy>\n  );\n};\n\nexport default Popover;\n","import { FC, ReactElement, ReactNode } from 'react';\nimport classNames from 'classnames';\nimport { TippyProps } from '@tippyjs/react';\n\n// Components\nimport Popover from '../Popover/';\n\n// Styles\nimport './Tooltip.scss';\nimport 'tippy.js/dist/tippy.css';\nimport 'tippy.js/themes/light.css';\nimport 'tippy.js/themes/light-border.css';\nimport 'tippy.js/animations/scale.css';\n\n// Types\nimport { TestMetadata } from 'types';\n\nexport interface TooltipProps {\n  children: ReactNode;\n  tippyProps?: TippyProps;\n  className?: string;\n  contentClassName?: string;\n  tooltipContent: ReactElement | string;\n  // Test IDs for component sections\n  testMetadata?: TestMetadata;\n}\n\nconst defaultTippyProps: TippyProps = {\n  maxWidth: 'none',\n  interactive: true,\n  arrow: true,\n};\n\nconst Tooltip: FC<TooltipProps> = ({\n  children,\n  className,\n  contentClassName,\n  tooltipContent,\n  tippyProps,\n  testMetadata,\n}) => {\n  return (\n    <Popover\n      className={classNames('sb-tooltip', className)}\n      popoverContent={tooltipContent}\n      tippyProps={{ ...defaultTippyProps, ...tippyProps }}\n      {...testMetadata}\n      {...{ contentClassName }}\n    >\n      {children}\n    </Popover>\n  );\n};\n\nexport default Tooltip;\n","var __WEBPACK_NAMESPACE_OBJECT__ = require(\"react\");","var __WEBPACK_NAMESPACE_OBJECT__ = require(\"tippy.js\");","import { ComponentProps, forwardRef } from 'react';\nimport classNames from 'classnames';\n\n// Styles\nimport './Image.scss';\n\n// Types\nimport { TestMetadata } from 'types';\n\ntype Props = ComponentProps<'img'>;\nexport type ImageProps = ComponentProps<typeof Image> & {\n  testMetadata?: TestMetadata;\n};\n\nconst Image = forwardRef<HTMLImageElement, Props>(function InnerImage(\n  { className, alt = '', ...otherProps },\n  ref,\n) {\n  return (\n    <img\n      alt={alt}\n      className={classNames('sb-image', className)}\n      ref={ref}\n      {...otherProps}\n    />\n  );\n});\n\nexport default Image;\n","export const ASSET_URL = 'https://dtci-spellbook.s3-us-west-2.amazonaws.com';\n\nexport const IMAGE_URL = `${ASSET_URL}/img`;\n\nexport const ICON_URL = `${IMAGE_URL}/icons`;\n\nexport const STORIES_URL =\n  'https://gitlab.disney.com/dtci-bp-software-solutions/ui/spellbook/-/blob/develop/src';\n","import { FC, useMemo } from 'react';\nimport classNames from 'classnames';\n\n// Components\nimport Image from '../Image';\n\n// Styles\nimport './Icon.scss';\n\n// Types\nimport { FontAwesomePackage, TestMetadata } from 'types';\n\n// Utils\nimport { ICON_URL } from '../_utils/config';\n\nexport interface IconProps {\n  /**  Whether the component is from font-awesome (fa) or hosted on AWS (aws)*/\n  iconType: 'fa' | 'aws';\n  /** Size override for the icon: smaller (12x12), small (16x16), medium (20x20), large (32x32), larger (48x48) */\n  size?: 'smaller' | 'small' | 'medium' | 'large' | 'larger' | 'auto';\n  /**  The name of the font awesome icon OR an AWS hosted icon */\n  iconName: string;\n  /** Package used for font awesome icons */\n  faPackage?: FontAwesomePackage;\n  /** Class name that goes on the icon */\n  className?: string;\n  /** Label text to display */\n  altText?: string;\n  /** Label text for hover */\n  title?: string;\n  /** Sets test id */\n  testMetadata?: {\n    iconAWSImage?: TestMetadata;\n    iconFASpan?: TestMetadata;\n  };\n}\n\nconst Icon: FC<IconProps> = ({\n  size,\n  iconType,\n  faPackage = 'fab',\n  iconName,\n  className,\n  altText,\n  title,\n  testMetadata = {\n    iconAWSImage: { 'data-testid': 'aws-icon' },\n    iconFASpan: { 'data-testid': 'fa-icon' },\n  },\n}) => {\n  const iconClassNames = useMemo(\n    () =>\n      classNames(\n        'sb-icon',\n        {\n          'sb-icon__size-auto': size === 'auto',\n          'sb-icon__size-smaller': size === 'smaller',\n          'sb-icon__size-small': size === 'small',\n          'sb-icon__size-medium': size === 'medium',\n          'sb-icon__size-large': size === 'large',\n          'sb-icon__size-larger': size === 'larger',\n        },\n        className,\n      ),\n    [size, className],\n  );\n\n  if (iconType === 'aws') {\n    return (\n      <Image\n        className={iconClassNames}\n        alt={altText}\n        title={title}\n        {...testMetadata?.iconAWSImage}\n        src={`${ICON_URL}/${iconName}.svg`}\n      />\n    );\n  } else {\n    return (\n      <>\n        <span\n          {...testMetadata?.iconFASpan}\n          className={classNames([\n            `${faPackage} ${iconName} ${iconClassNames}`,\n            faPackage,\n            iconName,\n          ])}\n          aria-label={altText}\n          title={title}\n        />\n      </>\n    );\n  }\n};\n\nexport default Icon;\n","import { FC, ReactElement } from 'react';\nimport classNames from 'classnames';\n\n// Components\nimport Tooltip from '../Tooltip';\nimport Icon from '../Icon';\n\n// Types\nimport { SizeOptions, TestMetadata } from 'types';\n\n// Styles\nimport './TooltipTemplate.scss';\n\nexport interface TooltipTemplateProps {\n  /** tooltip content - can be an array of string or a custom React element */\n  tooltipContent: ReactElement | string[];\n  /** size options for the icon */\n  size?: SizeOptions;\n  /** classname */\n  className?: string;\n  // Test IDs for component sections\n  testMetadata?: {\n    icon?: TestMetadata;\n    tooltip?: TestMetadata;\n  };\n}\n\nconst TooltipTemplate: FC<TooltipTemplateProps> = ({\n  tooltipContent,\n  size = 'smaller',\n  className,\n  testMetadata,\n}) => (\n  <Tooltip\n    tippyProps={{ placement: 'right' }}\n    tooltipContent={\n      Array.isArray(tooltipContent) ? (\n        <div>\n          {tooltipContent.map((text) => (\n            <div key={text}>{text}</div>\n          ))}\n        </div>\n      ) : (\n        tooltipContent\n      )\n    }\n    className={classNames(className, 'sb-cp-tooltip-template')}\n    testMetadata={testMetadata?.tooltip}\n  >\n    <Icon\n      className=\"sb-cp-tooltip-template__icon\"\n      faPackage=\"fa-regular\"\n      iconName=\"fa-circle-info\"\n      iconType=\"fa\"\n      size={size}\n      testMetadata={{\n        iconFASpan: testMetadata?.icon,\n      }}\n    />\n  </Tooltip>\n);\n\nexport default TooltipTemplate;\n","import { ComponentProps, FC, ReactNode } from 'react';\nimport classNames from 'classnames';\n\n// Components\nimport TooltipTemplate from '../TooltipTemplate';\n\n// Styles\nimport './Field.scss';\n\n// Types\nimport { TestMetadata } from 'types';\n\nexport interface FieldProps {\n  /** Text of visible input label */\n  labelText?: ReactNode;\n  /** Label for (same as related input name) */\n  labelFor?: string;\n  /** Tooltip icon and hover text */\n  tooltip?: string[];\n  /** Boolean to determine if field is required */\n  required?: boolean;\n  /** Helper text, if any */\n  helper?: ReactNode;\n  /** Field error message, if any */\n  error?: ReactNode;\n  /** Field success message, if any */\n  success?: ReactNode;\n  /** Actual control component to be displayed */\n  control: ReactNode;\n  /** className for top level component */\n  className?: string;\n  /** Passing props to the label */\n  labelProps?: ComponentProps<'label'> & TestMetadata;\n  /** Fix the feedback section height so it doesn't jump as error or success feedback is displayed */\n  fixedHeightFeedback?: boolean;\n  /** text to display for required fields */\n  requiredText?: string;\n}\n\nconst Field: FC<FieldProps> = ({\n  labelText,\n  labelFor,\n  tooltip,\n  required,\n  helper,\n  error,\n  success,\n  control,\n  className = '',\n  labelProps,\n  fixedHeightFeedback = true,\n  requiredText = '*Required',\n  ...otherProps\n}) => {\n  const fieldClassName = classNames('sb-field', className);\n\n  return (\n    <div {...otherProps} className={fieldClassName}>\n      {labelText && (\n        <div className=\"sb-field__label\">\n          <label\n            className=\"sb-field__label-text\"\n            htmlFor={labelFor}\n            {...labelProps}\n          >\n            {labelText}\n          </label>\n          {tooltip && (\n            <TooltipTemplate tooltipContent={tooltip} size=\"smaller\" />\n          )}\n          {required && (\n            <div className=\"sb-field__label-required-text\">{requiredText}</div>\n          )}\n        </div>\n      )}\n      {control}\n      {helper && <div className=\"sb-field__feedback\">{helper}</div>}\n      {error ? (\n        <div className=\"sb-field__feedback sb-field__feedback--has-error\">\n          {error}\n        </div>\n      ) : success ? (\n        <div className=\"sb-field__feedback sb-field__feedback--has-success\">\n          {success}\n        </div>\n      ) : (\n        fixedHeightFeedback && <div className=\"sb-field__feedback\">&nbsp;</div>\n      )}\n    </div>\n  );\n};\n\nexport default Field;\n"],"names":["root","factory","exports","module","define","amd","a","i","this","__webpack_require__","getter","__esModule","d","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","require","defaulTippyProps","arrow","className","contentClassName","children","popoverContent","tippyProps","testMetadata","visible","classNames","content","popover","defaultTippyProps","maxWidth","interactive","tooltipContent","Image","forwardRef","ref","alt","otherProps","IMAGE_URL","ICON_URL","size","iconType","faPackage","iconName","altText","title","iconAWSImage","iconFASpan","iconClassNames","useMemo","src","placement","Array","isArray","map","text","tooltip","icon","labelText","labelFor","required","helper","error","success","control","labelProps","fixedHeightFeedback","requiredText","fieldClassName","htmlFor"],"sourceRoot":""}