declare const EnvironmentValues: any;
declare const IS_DEV: boolean;
declare const IS_QE: boolean;
declare const IS_PROD: boolean;
declare const commonConfig: {
    HTTPS: boolean;
    URL_BASE: string;
    JWKS_PATH: string;
    CP_CLIENT_ID: string;
    CP_CLIENT_SECRET: string;
    URL_PATH: string;
    TOKEN_PATH: string;
    CP_RESPONSE_MODE: string;
    CP_RESPONSE_TYPE: string;
    CP_GRANT_TYPE: string;
    CP_SCOPE: string;
    CP_SAVE_COOKIE: string;
    EXTERNAL_API_URL: string;
    EXTERNAL_RELEASE_NOTES_API_URL: string;
    EXTERNAL_MOCK_SERVER_URL: string;
    NONCE: string;
    ADOBE_ANALYTICS_ENV_NAME: any;
    ADOBE_ORG_PATH: string;
    ADOBE_ANALYTICS_ENV_ID: string;
    NEW_RELIC_BROWSER_ENABLED: boolean;
    ROSTR_CLIENT_ID: string;
    ROSTR_AVATAR_URL: string;
    ANALYZE_BUNDLE: string;
};
declare const local: {
    CP_CALLBACK_URL: string;
    URL_BASE: string;
    JWKS_PATH: string;
    CP_CLIENT_ID: string;
    CP_CLIENT_SECRET: string;
    LOGGING_LEVEL: string;
    HTTPS: boolean;
    URL_PATH: string;
    TOKEN_PATH: string;
    CP_RESPONSE_MODE: string;
    CP_RESPONSE_TYPE: string;
    CP_GRANT_TYPE: string;
    CP_SCOPE: string;
    CP_SAVE_COOKIE: string;
    EXTERNAL_API_URL: string;
    EXTERNAL_RELEASE_NOTES_API_URL: string;
    EXTERNAL_MOCK_SERVER_URL: string;
    NONCE: string;
    ADOBE_ANALYTICS_ENV_NAME: any;
    ADOBE_ORG_PATH: string;
    ADOBE_ANALYTICS_ENV_ID: string;
    NEW_RELIC_BROWSER_ENABLED: boolean;
    ROSTR_CLIENT_ID: string;
    ROSTR_AVATAR_URL: string;
    ANALYZE_BUNDLE: string;
};
declare const dev: {
    CP_CALLBACK_URL: string;
    LOGGING_LEVEL: string;
    HTTPS: boolean;
    URL_BASE: string;
    JWKS_PATH: string;
    CP_CLIENT_ID: string;
    CP_CLIENT_SECRET: string;
    URL_PATH: string;
    TOKEN_PATH: string;
    CP_RESPONSE_MODE: string;
    CP_RESPONSE_TYPE: string;
    CP_GRANT_TYPE: string;
    CP_SCOPE: string;
    CP_SAVE_COOKIE: string;
    EXTERNAL_API_URL: string;
    EXTERNAL_RELEASE_NOTES_API_URL: string;
    EXTERNAL_MOCK_SERVER_URL: string;
    NONCE: string;
    ADOBE_ANALYTICS_ENV_NAME: any;
    ADOBE_ORG_PATH: string;
    ADOBE_ANALYTICS_ENV_ID: string;
    NEW_RELIC_BROWSER_ENABLED: boolean;
    ROSTR_CLIENT_ID: string;
    ROSTR_AVATAR_URL: string;
    ANALYZE_BUNDLE: string;
};
declare const qe: {
    URL_BASE: string;
    JWKS_PATH: string;
    CP_CALLBACK_URL: string;
    CP_CLIENT_ID: string;
    CP_CLIENT_SECRET: string;
    LOGGING_LEVEL: string;
    HTTPS: boolean;
    URL_PATH: string;
    TOKEN_PATH: string;
    CP_RESPONSE_MODE: string;
    CP_RESPONSE_TYPE: string;
    CP_GRANT_TYPE: string;
    CP_SCOPE: string;
    CP_SAVE_COOKIE: string;
    EXTERNAL_API_URL: string;
    EXTERNAL_RELEASE_NOTES_API_URL: string;
    EXTERNAL_MOCK_SERVER_URL: string;
    NONCE: string;
    ADOBE_ANALYTICS_ENV_NAME: any;
    ADOBE_ORG_PATH: string;
    ADOBE_ANALYTICS_ENV_ID: string;
    NEW_RELIC_BROWSER_ENABLED: boolean;
    ROSTR_CLIENT_ID: string;
    ROSTR_AVATAR_URL: string;
    ANALYZE_BUNDLE: string;
};
declare const prod: {
    CP_CALLBACK_URL: string;
    LOGGING_LEVEL: string;
    ANALYZE_BUNDLE: string;
    HTTPS: boolean;
    URL_BASE: string;
    JWKS_PATH: string;
    CP_CLIENT_ID: string;
    CP_CLIENT_SECRET: string;
    URL_PATH: string;
    TOKEN_PATH: string;
    CP_RESPONSE_MODE: string;
    CP_RESPONSE_TYPE: string;
    CP_GRANT_TYPE: string;
    CP_SCOPE: string;
    CP_SAVE_COOKIE: string;
    EXTERNAL_API_URL: string;
    EXTERNAL_RELEASE_NOTES_API_URL: string;
    EXTERNAL_MOCK_SERVER_URL: string;
    NONCE: string;
    ADOBE_ANALYTICS_ENV_NAME: any;
    ADOBE_ORG_PATH: string;
    ADOBE_ANALYTICS_ENV_ID: string;
    NEW_RELIC_BROWSER_ENABLED: boolean;
    ROSTR_CLIENT_ID: string;
    ROSTR_AVATAR_URL: string;
};
