export declare const MAJOR_VERSION = "15";
import { GridApi, GridOptions } from 'ag-grid-community';
export declare const createStoryTitlePrefix: () => string;
export declare const makeid: () => string;
export type FakeServerRecord = {
    id: string;
};
/**
 * A fake server API to use in Storybook to mock API calls with caching capabilities.
 */
export declare class FakeServerAPI<T extends FakeServerRecord> {
    private _serverCache;
    private readonly _responseTime;
    private readonly _logRequests;
    private readonly _dataSource;
    /**
     * Constructor
     * @param dataSource - mocked data to use as the server data.
     * @param responseTimeInMS - delay to add to the API calls.
     * @param enableLogs - console.info requests.
     */
    constructor(dataSource: T[], responseTimeInMS?: number, enableLogs?: boolean);
    get responseTime(): number;
    get serverCache(): Map<string, T>;
    get dataSource(): Map<string, T>;
    getById(id: string): Promise<T | void>;
    clearCache(): void;
    private mapToArray;
    getAll(): Promise<T[]>;
    getWithError(): Promise<Error>;
}
export declare const waitForDataToHaveLoaded: () => Promise<void>;
export declare const getGridOptions: (gridApi: GridApi) => GridOptions;
