import { Dispatch, SetStateAction } from 'react';
import { BadgeTypes } from '../types';
export interface TreeEntity {
    [key: string]: any;
    data?: TreeEntity[];
    actions?: string[];
}
export interface TreeAction {
    label?: string;
    onClick: (value: string, id: string | number) => void;
}
export interface TreeContext {
    onCreate?: (parentId: string | number, data: TreeEntity, level: number | string) => Promise<TreeEntity | void>;
    updateTree: (id: string | number, data: TreeEntity, level: number, path: string, group: boolean) => Promise<void>;
    primaryKey: string;
    idKey: string;
    statusKey: string;
    isSaving: string;
    levels: string[];
    statuses?: Record<string, BadgeTypes>;
    actions?: Record<string, TreeAction>;
    onClickItem?: (id: string | number, node: TreeEntity, level: string | number) => void;
    toggleAll: boolean;
    setToggleAll: Dispatch<SetStateAction<boolean>>;
    lengthKey: string;
    activeItemId?: string | number;
    disabled?: boolean;
    iconName?: string;
    customClass?: string;
}
export interface TreeSaving {
    disabled?: boolean;
    isFetching?: boolean;
}
