import { FC, ReactNode, SyntheticEvent } from 'react';
import './Drawer.scss';
import { TestMetadata } from 'types';
import { TAnalyticsEventData } from '@dtci/dash/analytics';
export interface DrawerProps {
    /** Determines if the drawer should shrink the main content when opened */
    shouldShrinkMainContent?: boolean;
    /** Determines if the drawer is open */
    isPanelOpen: boolean;
    /** Panel component to be rendered as an overlay from the right side */
    panel: ReactNode;
    /** Short descriptor of drawer (shows in header and for ARIA labeling) */
    header: ReactNode;
    /** Determines if drawer header should be hidden */
    hideHeader?: boolean;
    /** Determines if drawer header should be frozen */
    freezeHeader?: boolean;
    /** Determines if close button on drawer should be hidden */
    hideClose?: boolean;
    /** Close button function */
    onClose?: (e: SyntheticEvent) => void;
    /** Class name for drawer container */
    className?: string;
    /** Animation direction for the drawer */
    position?: 'left' | 'right';
    /** Type of page overlay: blackout, whiteout */
    bodyOverlay?: 'blackout' | 'whiteout';
    testMetadata?: {
        drawerMain?: TestMetadata;
        drawerOverlay?: TestMetadata;
        drawerOverlayHeader?: TestMetadata;
        drawerOverlayCloseButton?: TestMetadata;
        drawerFooter?: TestMetadata;
    };
    /** Optional ReactNode to put in the footer of the drawer */
    footer?: ReactNode;
    size?: 'normal' | '80' | '85' | '90' | '95';
    /** Additional event information to pass to analytics tracking */
    analyticsEventData?: TAnalyticsEventData;
}
declare const Drawer: FC<DrawerProps>;
export default Drawer;
