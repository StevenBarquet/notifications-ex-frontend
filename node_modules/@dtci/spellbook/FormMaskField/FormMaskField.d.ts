/// <reference types="react" />
import { Path, RegisterOptions } from 'react-hook-form';
import { FormFieldProps } from '../FormField';
import { MaskedInputProps } from '../MaskedInput';
import { TestMetadata } from 'types';
export interface FormMaskFieldProps<I extends Record<string, unknown>> {
    /** Name for field (Unique in the form) */
    fieldName: Path<I>;
    /** Mask */
    mask: string;
    /** Display name for field */
    labelText?: string;
    /** Tooltip icon and hover text */
    tooltip?: string[];
    /** Display name for field */
    helper?: string;
    /** Class name */
    className?: string;
    /** Mark field required (*) */
    required?: boolean;
    /** Rules to pass down to control */
    rules?: RegisterOptions;
    maskedInputProps?: Partial<MaskedInputProps>;
    leavePlaceholders?: boolean;
    /** Sets test id */
    testMetadata?: {
        wrapper?: TestMetadata;
        input?: TestMetadata;
    };
}
declare const FormMaskField: <I extends Record<string, unknown>>({ fieldName, labelText, tooltip, required, rules, maskedInputProps, helper, testMetadata, mask, leavePlaceholders, readOnly, truncate, ...otherProps }: FormMaskFieldProps<I> & Partial<FormFieldProps<I>>) => JSX.Element;
export default FormMaskField;
