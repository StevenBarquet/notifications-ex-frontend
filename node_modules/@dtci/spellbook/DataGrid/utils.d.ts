import { GridApi, IRowNode } from 'ag-grid-community';
export type DataGridContext = {
    shouldSelectAll: boolean;
    groupSelectionId?: string;
    groupToExpandByDefault?: string | [];
    expandedAutoHeightRows: Array<{
        height: number;
        id: string;
    }>;
};
export declare const getChildCount: (data: {
    childCount: number;
}) => number;
export declare const deselectAllRows: (api: GridApi) => void;
/**
 * Select all the grid rows and return them.
 * @param api
 */
export declare const selectAllRows: <T extends Record<string, unknown>>(api: GridApi) => T[];
/**
 * Get count of rows including the ones that are not currently visible.
 * This is an alternative to getDisplayedRowCount that returns inconsistent results.
 * @param api
 */
export declare const hasSelectedAllRows: (api: GridApi) => boolean;
export declare const dataGridContextInitialValue: DataGridContext;
export declare const generateGroupId: (groupKeys?: string[]) => string;
export declare const getDataGridContext: (gridApi: GridApi) => DataGridContext;
export declare const setContextValue: (gridApi: GridApi, value: Partial<DataGridContext>) => void;
export declare const getNodeChildren: (node: IRowNode) => IRowNode[];
export declare const updateGroupParentSelection: (rowNode: IRowNode, isNodeSelected: boolean) => void;
export declare const selectGroupData: (rowNode: IRowNode, selected: boolean, gridApi: GridApi, groupSelectionId?: string) => void;
