{"version":3,"file":"index.js","mappings":"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","sources":["webpack://@dtci/spellbook/webpack/universalModuleDefinition","webpack://@dtci/spellbook/webpack/bootstrap","webpack://@dtci/spellbook/webpack/runtime/compat get default export","webpack://@dtci/spellbook/webpack/runtime/define property getters","webpack://@dtci/spellbook/webpack/runtime/hasOwnProperty shorthand","webpack://@dtci/spellbook/webpack/runtime/make namespace object","webpack://@dtci/spellbook/external commonjs \"lodash/isBoolean\"","webpack://@dtci/spellbook/external commonjs \"@babel/runtime/helpers/defineProperty\"","webpack://@dtci/spellbook/external commonjs \"@babel/runtime/helpers/objectWithoutProperties\"","webpack://@dtci/spellbook/external commonjs \"react\"","webpack://@dtci/spellbook/external commonjs \"classnames\"","webpack://@dtci/spellbook/external commonjs \"@tippyjs/react\"","webpack://@dtci/spellbook/external commonjs \"react/jsx-runtime\"","webpack://@dtci/spellbook/./src/Popover/Popover.tsx","webpack://@dtci/spellbook/./src/Tooltip/Tooltip.tsx","webpack://@dtci/spellbook/external commonjs \"tippy.js\"","webpack://@dtci/spellbook/./src/Typography/Typography.tsx","webpack://@dtci/spellbook/./src/FormReadOnlyFieldTextValue/FormReadOnlyFieldTextValue.tsx","webpack://@dtci/spellbook/./src/FormReadOnlyFieldBooleanValue/FormReadOnlyFieldBooleanValue.tsx"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(this, function() {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","var __WEBPACK_NAMESPACE_OBJECT__ = require(\"lodash/isBoolean\");","var __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/helpers/defineProperty\");","var __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/helpers/objectWithoutProperties\");","var __WEBPACK_NAMESPACE_OBJECT__ = require(\"react\");","var __WEBPACK_NAMESPACE_OBJECT__ = require(\"classnames\");","var __WEBPACK_NAMESPACE_OBJECT__ = require(\"@tippyjs/react\");","var __WEBPACK_NAMESPACE_OBJECT__ = require(\"react/jsx-runtime\");","import { FC, ReactNode } from 'react';\nimport classNames from 'classnames';\nimport Tippy, { TippyProps } from '@tippyjs/react';\n\n// Styles\nimport './Popover.scss';\nimport 'tippy.js/dist/tippy.css';\nimport 'tippy.js/themes/light.css';\nimport 'tippy.js/themes/light-border.css';\n\n// Types\nimport { TestMetadata } from 'types';\n\nexport interface PopoverProps {\n  /** Wrapped element that will toggle the popover */\n  children: ReactNode;\n  /** Class name */\n  className?: string;\n  /** Content Class name */\n  contentClassName?: string;\n  /** The actual content of the popover */\n  popoverContent: TippyProps['content'];\n  /** Props to be passed to the instanced Tippy component */\n  tippyProps?: TippyProps;\n  /** Prop to control hide/show behaviour */\n  visible?: boolean;\n  /** Test IDs for component sections */\n  testMetadata?: {\n    popover?: TestMetadata;\n    popoverContent?: TestMetadata;\n  };\n}\n\nconst defaulTippyProps: TippyProps = {\n  arrow: false,\n};\n\nconst Popover: FC<PopoverProps> = ({\n  className,\n  contentClassName,\n  children,\n  popoverContent,\n  tippyProps,\n  testMetadata,\n  visible,\n}) => {\n  return (\n    <Tippy\n      {...defaulTippyProps}\n      {...tippyProps}\n      className={classNames('sb-popover', className)}\n      visible={visible}\n      content={popoverContent}\n      {...testMetadata?.popover}\n    >\n      <div\n        className={classNames('sb-popover__content', contentClassName)}\n        {...testMetadata?.popoverContent}\n      >\n        {children}\n      </div>\n    </Tippy>\n  );\n};\n\nexport default Popover;\n","import { FC, ReactElement, ReactNode } from 'react';\nimport classNames from 'classnames';\nimport { TippyProps } from '@tippyjs/react';\n\n// Components\nimport Popover from '../Popover/';\n\n// Styles\nimport './Tooltip.scss';\nimport 'tippy.js/dist/tippy.css';\nimport 'tippy.js/themes/light.css';\nimport 'tippy.js/themes/light-border.css';\nimport 'tippy.js/animations/scale.css';\n\n// Types\nimport { TestMetadata } from 'types';\n\nexport interface TooltipProps {\n  children: ReactNode;\n  tippyProps?: TippyProps;\n  className?: string;\n  contentClassName?: string;\n  tooltipContent: ReactElement | string;\n  // Test IDs for component sections\n  testMetadata?: TestMetadata;\n}\n\nconst defaultTippyProps: TippyProps = {\n  maxWidth: 'none',\n  interactive: true,\n  arrow: true,\n};\n\nconst Tooltip: FC<TooltipProps> = ({\n  children,\n  className,\n  contentClassName,\n  tooltipContent,\n  tippyProps,\n  testMetadata,\n}) => {\n  return (\n    <Popover\n      className={classNames('sb-tooltip', className)}\n      popoverContent={tooltipContent}\n      tippyProps={{ ...defaultTippyProps, ...tippyProps }}\n      {...testMetadata}\n      {...{ contentClassName }}\n    >\n      {children}\n    </Popover>\n  );\n};\n\nexport default Tooltip;\n","var __WEBPACK_NAMESPACE_OBJECT__ = require(\"tippy.js\");","import { FC, HTMLAttributes, useMemo } from 'react';\nimport classNames from 'classnames';\n\n// Components\nimport Tooltip from '../Tooltip';\n\n// Styles\nimport './Typography.scss';\n\n// Types\nimport { TestMetadata, TypographyVariants } from 'types';\n\nconst variantsMapping = {\n  T100: 'h1',\n  T90: 'h2',\n  T80: 'h3',\n  T70: 'h4',\n  T60: 'h5',\n  T50: 'h6',\n  T40: 'p',\n  T30: 'p',\n  T20: 'p',\n  T15: 'p',\n  T10: 'p',\n  T05: 'p',\n} as const;\n\nexport interface TypographyProps extends HTMLAttributes<HTMLElement> {\n  /** Applies the typography style */\n  variant: TypographyVariants;\n  /** Add vertical spacing below the typography element **/\n  bottomGutter?: boolean;\n  clickable?: boolean;\n  bold?: boolean;\n  italic?: boolean;\n  // Test IDs for component sections\n  testMetadata?: TestMetadata;\n  /** Flag to control whether the variants should change size based on screen size */\n  responsive?: boolean;\n  /** Trim text to container and add ellipsis */\n  truncate?: boolean;\n  /** Wrap text */\n  wrap?: boolean;\n  //** Title in tag */\n  name?: string;\n}\n\nconst Typography: FC<TypographyProps> = ({\n  variant,\n  className,\n  bottomGutter = false,\n  clickable = false,\n  bold = false,\n  italic = false,\n  children,\n  testMetadata,\n  responsive = false,\n  truncate = false,\n  wrap = false,\n  name,\n  ...props\n}) => {\n  const CustomTag = variantsMapping[variant];\n\n  const typographyClassNames = useMemo(\n    () =>\n      classNames(\n        `sb-typography sb-typography_${variant}`,\n        {\n          'sb-typography_with-bottom-gutter': bottomGutter,\n          'sb-typography_clickable': clickable,\n          'sb-typography_bold': bold,\n          'sb-typography_italic': italic,\n          'sb-typography_responsive': responsive,\n          'sb-typography_truncate': truncate,\n          'sb-typography_wrap': wrap,\n        },\n        className,\n      ),\n    [\n      variant,\n      bottomGutter,\n      clickable,\n      bold,\n      italic,\n      responsive,\n      truncate,\n      className,\n      wrap,\n    ],\n  );\n\n  const text = (\n    <CustomTag\n      title={name}\n      className={typographyClassNames}\n      {...props}\n      {...testMetadata}\n    >\n      {children}\n    </CustomTag>\n  );\n\n  return truncate ? (\n    <Tooltip tooltipContent={<>{children}</>}>{text}</Tooltip>\n  ) : (\n    text\n  );\n};\n\nexport default Typography;\n","import { FC } from 'react';\n\n// Components\nimport Typography from '../Typography';\n\n// Types\nimport { TestMetadata } from '../types';\nexport interface FormReadOnlyFieldTextValueProps {\n  testMetadata?: TestMetadata;\n  truncate?: 'truncate' | 'wrap';\n  value?: string;\n  fallbackValue?: string;\n}\n\nconst FormReadOnlyFieldTextValue: FC<FormReadOnlyFieldTextValueProps> = ({\n  value,\n  truncate,\n  testMetadata,\n  fallbackValue = '-',\n}) => (\n  <Typography\n    truncate={truncate === 'truncate'}\n    wrap={truncate === 'wrap'}\n    variant=\"T15\"\n    {...testMetadata}\n  >\n    {value || fallbackValue}\n  </Typography>\n);\n\nexport default FormReadOnlyFieldTextValue;\n","import isBoolean from 'lodash/isBoolean';\n\n// Type\nimport { FC } from 'react';\nimport { TestMetadata } from '../types';\n\n// Components\nimport FormReadOnlyFieldTextValue from '../FormReadOnlyFieldTextValue';\n\nexport interface FormReadOnlyFieldBooleanValueProps {\n  testMetadata?: TestMetadata;\n  value?: boolean;\n}\n\nconst FormReadOnlyFieldBooleanValue: FC<FormReadOnlyFieldBooleanValueProps> = ({\n  value,\n  testMetadata,\n}) => {\n  let formattedValue;\n\n  if (isBoolean(value)) {\n    formattedValue = value ? 'Yes' : 'No';\n  }\n\n  return (\n    <FormReadOnlyFieldTextValue\n      testMetadata={testMetadata}\n      value={formattedValue}\n    />\n  );\n};\n\nexport default FormReadOnlyFieldBooleanValue;\n"],"names":["root","factory","exports","module","define","amd","a","i","this","__webpack_require__","getter","__esModule","d","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","require","defaulTippyProps","arrow","className","contentClassName","children","popoverContent","tippyProps","testMetadata","visible","classNames","content","popover","defaultTippyProps","maxWidth","interactive","tooltipContent","variantsMapping","T100","T90","T80","T70","T60","T50","T40","T30","T20","T15","T10","T05","variant","bottomGutter","clickable","bold","italic","responsive","truncate","wrap","name","props","CustomTag","typographyClassNames","useMemo","text","title","fallbackValue","formattedValue","isBoolean"],"sourceRoot":""}