import { ComponentProps, ReactElement } from 'react';
import { SearchProps } from '../../../Search';
import Input from '../../../Input';
import './SearchTypeaheadTemplate.scss';
import { BadgeProps } from '../../../Badge';
export type SearchTypeaheadTemplateProps<T extends SearchResultBase> = {
    /** Container class name */
    className?: string;
    /** The data to fill search results list */
    searchResults?: T[];
    /** Event to fire when search changes */
    onChange: (query: string) => void;
    /** Event to fire when result selected */
    onSelect: (selectedResult: T) => void;
    /** Event to fire when result selected */
    onViewMoreClick?: () => void;
    /** Search/Input value */
    value: string;
    /** Additional input props for Search, based on the Search Component */
    searchProps?: Partial<SearchProps>;
    /** Additional input props for Input, based on the inputComponent */
    inputProps?: ComponentProps<typeof Input>;
    /** Additional badge props */
    badgeProps?: BadgeProps;
    /** Renders a loader */
    isLoading?: boolean;
};
export type SearchResultBase = {
    name: string;
    id: string;
    metadata?: string[];
};
type SearchTypeahead = <T extends SearchResultBase>(p: SearchTypeaheadTemplateProps<T>) => ReactElement<SearchTypeaheadTemplateProps<T>>;
declare const SearchTypeaheadTemplate: SearchTypeahead;
export default SearchTypeaheadTemplate;
