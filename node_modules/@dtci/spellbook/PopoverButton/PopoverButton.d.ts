import React, { SyntheticEvent } from 'react';
import { ButtonProps } from '../Button';
import { ContainerProps } from '../Container';
import { PopoverProps } from '../Popover';
import './PopoverButton.scss';
import { TestMetadata } from 'types';
export interface PopoverButtonProps {
    /** If need to open/close outside of the button */
    isOpen?: boolean;
    /** Gets called when popover button opens/closes */
    handleToggle?: (open: boolean, e?: SyntheticEvent) => void;
    /** Sets disabled and fetching on button */
    isDisabled?: boolean;
    /** Text override, default is empty */
    buttonText?: string;
    /** Icon override, default is ellipsis */
    buttonIcon?: string;
    /** Button props override if more changes are needed */
    buttonProps?: ButtonProps;
    /** Popover props override if more changes are needed */
    popoverProps?: Omit<PopoverProps, 'children' | 'popoverContent'>;
    /** Container props override if more changes are needed */
    containerProps?: Omit<ContainerProps, 'children'>;
    portal?: HTMLElement | null;
    /** Classname for the Popover component */
    className?: string;
    /** Classname for the Popover wrapper */
    contentClassName?: string;
    /** Testmetadata for the sections inside the component */
    testMetadata?: {
        container?: TestMetadata;
        popover?: {
            popover?: TestMetadata;
            popoverContent?: TestMetadata;
        };
        button?: TestMetadata;
    };
}
declare const PopoverButton: React.FC<PopoverButtonProps>;
export default PopoverButton;
