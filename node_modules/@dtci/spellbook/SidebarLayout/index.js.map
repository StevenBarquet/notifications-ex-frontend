{"version":3,"file":"index.js","mappings":"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","sources":["webpack://@dtci/spellbook/webpack/universalModuleDefinition","webpack://@dtci/spellbook/webpack/bootstrap","webpack://@dtci/spellbook/webpack/runtime/compat get default export","webpack://@dtci/spellbook/webpack/runtime/define property getters","webpack://@dtci/spellbook/webpack/runtime/hasOwnProperty shorthand","webpack://@dtci/spellbook/webpack/runtime/make namespace object","webpack://@dtci/spellbook/external commonjs \"@babel/runtime/helpers/defineProperty\"","webpack://@dtci/spellbook/external commonjs \"@babel/runtime/helpers/objectWithoutProperties\"","webpack://@dtci/spellbook/external commonjs \"react\"","webpack://@dtci/spellbook/external commonjs \"classnames\"","webpack://@dtci/spellbook/external commonjs \"react/jsx-runtime\"","webpack://@dtci/spellbook/./src/PanelLayout/Panel.tsx","webpack://@dtci/spellbook/external commonjs \"@babel/runtime/helpers/slicedToArray\"","webpack://@dtci/spellbook/./src/PanelLayout/PanelLayout.tsx","webpack://@dtci/spellbook/./src/SidebarLayout/SidebarLayout.tsx"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(this, function() {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","var __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/helpers/defineProperty\");","var __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/helpers/objectWithoutProperties\");","var __WEBPACK_NAMESPACE_OBJECT__ = require(\"react\");","var __WEBPACK_NAMESPACE_OBJECT__ = require(\"classnames\");","var __WEBPACK_NAMESPACE_OBJECT__ = require(\"react/jsx-runtime\");","import { FC, useMemo } from 'react';\nimport classNames from 'classnames';\n\n// Components\nimport Container, { ContainerProps } from '../Container';\n\n// Styles\nimport './Panel.scss';\n\n// Types\nimport { TestMetadata } from 'types';\n\nexport interface PanelProps extends ContainerProps {\n  /** Grid area name of Panel */\n  name: string;\n  /** Can choose to only show panel for specific sizes */\n  visibleOn?: {\n    size: 'slim' | 'small' | 'medium' | 'large' | 'wide';\n    direction: 'up' | 'down';\n  };\n  /** Panel can scroll */\n  isScrollable?: boolean;\n  /** Set overflow: hidden */\n  overflow?: 'visible' | 'hidden' | 'scroll' | 'auto';\n  // Test IDs for component sections\n  testMetadata?: TestMetadata;\n}\n\nconst Panel: FC<PanelProps> = ({\n  children,\n  className,\n  style,\n  name,\n  visibleOn,\n  testMetadata,\n  isScrollable = true,\n  overflow = 'visible',\n  ...otherProps\n}) => {\n  const nameToken = useMemo((): Record<string, string> => {\n    return {\n      '--sb-panel-layout__panel-name': name,\n    };\n  }, [name]);\n\n  return (\n    <Container\n      className={classNames(\n        'sb-panel',\n        visibleOn &&\n          `sb-panel__visible-on-${visibleOn.size}-${visibleOn.direction}`,\n        {\n          'sb-panel_scrollable': isScrollable,\n          [`sb-panel_${overflow}`]: overflow !== 'visible',\n        },\n        className,\n      )}\n      style={{ ...nameToken, ...style }}\n      {...testMetadata}\n      {...otherProps}\n    >\n      {children}\n    </Container>\n  );\n};\n\nexport default Panel;\n","var __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/helpers/slicedToArray\");","import { ComponentProps, FC, useMemo } from 'react';\nimport classNames from 'classnames';\n\n// Styles\nimport './PanelLayout.scss';\n\n// Types\nimport { TestMetadata } from 'types';\n\nexport interface CssGridProps {\n  /** Sets token for grid-template-columns */\n  columns: string[];\n  /** Sets token for grid-template-rows */\n  rows: string[];\n  /** Sets token for grid-template-columns, each array represents a row */\n  areas: string[][];\n}\n\nexport interface PanelLayoutProps extends ComponentProps<'div'> {\n  slim: CssGridProps;\n  small?: CssGridProps;\n  medium?: CssGridProps;\n  large?: CssGridProps;\n  wide?: CssGridProps;\n  className?: string;\n  testMetadata?: TestMetadata;\n}\n\nconst isCssGridEntryDefined = (\n  entry: [string, CssGridProps | undefined],\n): entry is [string, CssGridProps] => {\n  const [, spec] = entry;\n  return spec !== undefined;\n};\n\nconst getTokensFromCssGridProp = (\n  reflowpoint: string,\n  prop: CssGridProps,\n): Record<string, string> => {\n  const areaRows = prop.areas.map((row) => `\"${row.join(' ')}\"`).join('\\n');\n\n  return {\n    [`--sb-panel-layout-${reflowpoint}-areas`]: areaRows,\n    [`--sb-panel-layout-${reflowpoint}-columns`]: prop.columns.join(' '),\n    [`--sb-panel-layout-${reflowpoint}-rows`]: prop.rows.join(' '),\n  };\n};\n\nconst PanelLayout: FC<PanelLayoutProps> = ({\n  children,\n  className,\n  style,\n  slim,\n  small,\n  medium,\n  large,\n  wide,\n  testMetadata,\n}) => {\n  const tokens = useMemo(\n    () =>\n      Object.entries({ slim, small, medium, large, wide })\n        .filter(isCssGridEntryDefined)\n        .reduce<Record<string, string>>(\n          (tokens, [reflowpoint, spec]) => ({\n            ...tokens,\n            ...getTokensFromCssGridProp(reflowpoint, spec),\n          }),\n          {},\n        ),\n    [slim, small, medium, large, wide],\n  );\n\n  return (\n    <div\n      className={classNames('sb-panel-layout', className)}\n      style={{ ...tokens, ...style }}\n      {...testMetadata}\n    >\n      {children}\n    </div>\n  );\n};\n\nexport default PanelLayout;\n","import { FC, useMemo } from 'react';\n\n// Components\nimport { PanelLayout } from '../PanelLayout';\n\n// Types\nimport { TestMetadata } from 'types';\n\nexport interface SidebarLayoutProps {\n  /** Primary is set to have auto width by default */\n  inverse?: boolean;\n  /** Custom class name for layout */\n  className?: string;\n  /** Test data IDs for layout */\n  testMetadata?: TestMetadata;\n  /** AreaMap */\n  areaMap?: {\n    primary: string;\n    secondary: string;\n  };\n}\n\nconst DualPanelLayout: FC<SidebarLayoutProps> = ({\n  inverse = false,\n  children,\n  areaMap = {\n    primary: 'primary',\n    secondary: 'secondary',\n  },\n  ...otherProps\n}) => {\n  const layout = useMemo(\n    () => ({\n      slim: {\n        columns: ['1fr'],\n        rows: ['1fr', 'auto'],\n        areas: [[areaMap.primary], [areaMap.secondary]],\n      },\n      small: {\n        columns: inverse ? ['auto', '33%'] : ['33%', 'auto'],\n        rows: ['1fr'],\n        areas: inverse\n          ? [[areaMap.primary, areaMap.secondary]]\n          : [[areaMap.secondary, areaMap.primary]],\n      },\n    }),\n    [inverse, areaMap],\n  );\n\n  return (\n    <PanelLayout {...layout} {...otherProps}>\n      {children}\n    </PanelLayout>\n  );\n};\n\nexport default DualPanelLayout;\n"],"names":["root","factory","exports","module","define","amd","a","i","this","__webpack_require__","getter","__esModule","d","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","require","isCssGridEntryDefined","entry","undefined","children","className","style","slim","small","medium","large","wide","testMetadata","tokens","useMemo","entries","filter","reduce","reflowpoint","spec","areaRows","areas","map","row","join","columns","rows","getTokensFromCssGridProp","classNames","inverse","areaMap","primary","secondary","otherProps","layout"],"sourceRoot":""}