import { ClassAttributes, DetailedHTMLProps, FC, TextareaHTMLAttributes } from 'react';
import './TextArea.scss';
import { TestMetadata } from 'types';
import { TAnalyticsEventData } from '@dtci/dash/analytics';
export interface TextAreaProps extends DetailedHTMLProps<TextareaHTMLAttributes<HTMLTextAreaElement>, HTMLTextAreaElement> {
    /** string value of the text insides the text area */
    value?: string;
    /** Determine if field is required */
    required?: boolean;
    /** If label is not visible, use aria-label for screen readers */
    labelText?: string;
    /** ref form inner input **/
    inputRef?: ClassAttributes<HTMLTextAreaElement>['ref'];
    /** Width of the Text Area */
    width?: 'small' | 'medium' | 'large' | 'auto';
    /** Error State */
    isError?: boolean;
    /** default number of lines to determine height */
    rows?: number;
    /** Max length of characters required */
    maxLength?: number;
    /** show a character count */
    charCount?: boolean;
    testMetadata?: TestMetadata;
    /** Additional event information to pass to analytics tracking */
    analyticsEventData?: TAnalyticsEventData;
}
/** TextArea components are useful for editing large areas of text such as paragraphs */
declare const TextArea: FC<TextAreaProps>;
export default TextArea;
