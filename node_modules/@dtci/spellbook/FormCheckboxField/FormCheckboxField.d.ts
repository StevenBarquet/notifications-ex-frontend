import { Path, RegisterOptions } from 'react-hook-form';
import { FormFieldProps } from '../FormField';
import './FormCheckboxField.scss';
import { TestMetadata, FormCheckboxFieldOption } from '../types';
import { HTMLProps } from 'react';
export interface FormCheckboxFieldProps<I extends Record<string, unknown>> {
    /** Name for field (Unique in the form) */
    fieldName: Path<I>;
    /** Display name for field */
    labelText?: string;
    /** Tooltip icon and hover text */
    tooltip?: string[];
    /** Mark field required (*) */
    required?: boolean;
    /** Check box options such name and id */
    options?: FormCheckboxFieldOption[];
    /** Horizontal orientation of the checkboxes */
    horizontal?: boolean;
    /** Rules to pass down to control */
    rules?: RegisterOptions;
    /** Additional input props for Input, based on the Input Component */
    inputProps?: Partial<HTMLProps<HTMLInputElement> & TestMetadata>;
    defaultValue?: unknown;
    /** Sets helper */
    helper?: string;
    /** Class name */
    className?: string;
    /** Sets test id */
    testMetadata?: {
        wrapper?: TestMetadata;
        input?: TestMetadata;
    };
}
declare const FormCheckboxField: <I extends Record<string, unknown>>({ fieldName, labelText, tooltip, required, options, horizontal, rules, inputProps, helper, className, testMetadata, defaultValue, readOnly, ...otherProps }: FormCheckboxFieldProps<I> & Partial<FormFieldProps<I>>) => JSX.Element;
export default FormCheckboxField;
