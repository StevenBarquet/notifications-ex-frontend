/// <reference types="react" />
import { Path, RegisterOptions } from 'react-hook-form';
import { ReactDatePickerProps } from 'react-datepicker';
import { FormFieldProps } from '../FormField';
import './FormDateField.scss';
import { TestMetadata } from 'types';
import { InputProps } from 'Input';
export interface FormDateFieldProps<I extends Record<string, unknown>> {
    /** Name for field (Unique in the form) */
    fieldName: Path<I>;
    /** Display name for field */
    labelText?: string;
    /** Tooltip icon and hover text */
    tooltip?: string[];
    /** Mark field required (*) */
    required?: boolean;
    /** Disable field (greyed out) */
    disabled?: boolean;
    /** Prevent navigating date selection with keyboard */
    disabledKeyboardNavigation?: boolean;
    /** Format of the date */
    dateFormat?: string;
    /** Sets helper */
    helper?: string;
    /** Class name */
    className?: string;
    /** Props to spread down to the select */
    datePickerProps?: Partial<ReactDatePickerProps>;
    inputProps?: Partial<InputProps>;
    defaultValue?: unknown;
    /** Sets test id */
    testMetadata?: {
        wrapper?: TestMetadata;
        input?: TestMetadata;
    };
    /** Rules passed down to control */
    rules?: RegisterOptions;
    labelFor?: string;
}
declare const FormDateField: <I extends Record<string, unknown>>({ fieldName, labelText, tooltip, required, disabled, disabledKeyboardNavigation, dateFormat, testMetadata, rules, helper, className, datePickerProps, inputProps, defaultValue, labelFor, readOnly, ...otherProps }: FormDateFieldProps<I> & Partial<FormFieldProps<I>>) => JSX.Element;
export default FormDateField;
