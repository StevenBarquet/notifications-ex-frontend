/// <reference types="react" />
import { RegisterOptions, Path } from 'react-hook-form';
import { FormFieldProps } from '../FormField';
import { ToggleProps } from '../Toggle';
import { TestMetadata } from 'types';
export interface FormToggleFieldProps<I extends Record<string, unknown>> {
    /** Name for field (Unique in the form) */
    fieldName: Path<I>;
    /** Display name for field */
    labelText?: string;
    /** Tooltip icon and hover text */
    tooltip?: string[];
    /** Label style for the toggle */
    labelStyle?: boolean;
    /** Mark field required (*) */
    required?: boolean;
    /** Rules to pass down to control */
    rules?: RegisterOptions;
    /** Additional input props for Input, based on the Input Component */
    inputProps?: Partial<ToggleProps>;
    /** Sets helper */
    helper?: string;
    /** Class name */
    className?: string;
    /** Sets test id */
    testMetadata?: {
        wrapper?: TestMetadata;
        input?: TestMetadata;
    };
    defaultValue?: boolean;
}
declare const FormToggleField: <I extends Record<string, unknown>>({ fieldName, labelText, tooltip, required, testMetadata, rules, helper, inputProps, readOnly, defaultValue, ...otherProps }: FormToggleFieldProps<I> & Partial<FormFieldProps<I>>) => JSX.Element;
export default FormToggleField;
