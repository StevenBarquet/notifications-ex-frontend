{"version":3,"file":"index.js","mappings":"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","sources":["webpack://@dtci/spellbook/webpack/universalModuleDefinition","webpack://@dtci/spellbook/webpack/bootstrap","webpack://@dtci/spellbook/webpack/runtime/compat get default export","webpack://@dtci/spellbook/webpack/runtime/define property getters","webpack://@dtci/spellbook/webpack/runtime/hasOwnProperty shorthand","webpack://@dtci/spellbook/webpack/runtime/make namespace object","webpack://@dtci/spellbook/external commonjs \"@babel/runtime/helpers/defineProperty\"","webpack://@dtci/spellbook/external commonjs \"@babel/runtime/helpers/slicedToArray\"","webpack://@dtci/spellbook/external commonjs \"@babel/runtime/helpers/objectWithoutProperties\"","webpack://@dtci/spellbook/external commonjs \"react\"","webpack://@dtci/spellbook/external commonjs \"classnames\"","webpack://@dtci/spellbook/external commonjs \"react/jsx-runtime\"","webpack://@dtci/spellbook/./src/Control/Control.tsx","webpack://@dtci/spellbook/./src/Control/ControlSet.tsx"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(this, function() {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","var __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/helpers/defineProperty\");","var __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/helpers/slicedToArray\");","var __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/helpers/objectWithoutProperties\");","var __WEBPACK_NAMESPACE_OBJECT__ = require(\"react\");","var __WEBPACK_NAMESPACE_OBJECT__ = require(\"classnames\");","var __WEBPACK_NAMESPACE_OBJECT__ = require(\"react/jsx-runtime\");","import {\n  useContext,\n  useState,\n  useEffect,\n  useCallback,\n  FC,\n  ReactNode,\n} from 'react';\nimport classNames from 'classnames';\n\n// Context\nimport { ControlSetContext } from '.';\n\n// Styles\nimport './Control.scss';\n\n// Types\nimport { TestMetadata } from 'types';\n\nexport interface ControlProps {\n  /** Content */\n  children?: ReactNode;\n  /** Classnames */\n  className?: string;\n  /** Set the control color: primary (default), secondary */\n  colorType?: 'primary' | 'secondary';\n  /** Control ID */\n  controlId?: string;\n  /** Set default selected state */\n  defaultSelected?: boolean;\n  /** Event to fire when toggled */\n  onToggle?: (selected: boolean) => void;\n  // Test IDs for component sections\n  testMetadata?: TestMetadata;\n}\n\nconst Control: FC<ControlProps> = ({\n  children,\n  className,\n  colorType = 'primary',\n  controlId,\n  defaultSelected = false,\n  onToggle,\n  testMetadata,\n  ...otherProps\n}) => {\n  const { selectedControlId, requireSelection, onControlSelect } =\n    useContext(ControlSetContext);\n\n  const [selected, setSelected] = useState(defaultSelected);\n\n  useEffect(() => {\n    if (defaultSelected) {\n      controlId && onControlSelect && onControlSelect(controlId);\n    }\n  }, [defaultSelected, onControlSelect, controlId]);\n\n  useEffect(() => {\n    if (selected && selectedControlId && selectedControlId !== controlId) {\n      setSelected(false);\n      if (onToggle) {\n        onToggle(false);\n      }\n    }\n    if (selectedControlId === controlId && selectedControlId) setSelected(true);\n  }, [selectedControlId, selected, controlId, onToggle]);\n\n  const handleClick = useCallback(() => {\n    const isCurrentlySelectedAndRequired =\n      requireSelection && selectedControlId === controlId && selected;\n    if (!isCurrentlySelectedAndRequired) {\n      const newSelected = !selected;\n      setSelected(newSelected);\n      if (onToggle) {\n        onToggle(newSelected);\n      }\n      newSelected && controlId && onControlSelect && onControlSelect(controlId);\n    }\n  }, [\n    onToggle,\n    selected,\n    requireSelection,\n    selectedControlId,\n    controlId,\n    onControlSelect,\n  ]);\n\n  return (\n    <div\n      className={classNames('sb-control', className, {\n        'sb-control_primary': colorType === 'primary',\n        'sb-control_secondary': colorType === 'secondary',\n        'sb-control_selected': selected,\n        'sb-control_unselected': !selected,\n      })}\n      onClick={handleClick}\n      {...testMetadata}\n      {...otherProps}\n    >\n      {children}\n    </div>\n  );\n};\n\nexport default Control;\n","import { createContext, useState, useCallback, useEffect, FC } from 'react';\nimport classNames from 'classnames';\n\n// Styles\nimport './ControlSet.scss';\n\nexport interface ControlSetContextProps {\n  /** control id that is currently selected */\n  selectedControlId: string | undefined;\n  /** If true, selection is required */\n  requireSelection: boolean;\n  /** Function that gets called when a control is toggled */\n  onControlSelect: (controlId: string) => void;\n}\n// This default declarations are ignored as it is necessary, but they're never called\n/* istanbul ignore next */\nexport const ControlSetContext = createContext<ControlSetContextProps>({\n  selectedControlId: undefined,\n  requireSelection: false,\n  onControlSelect: () => {\n    // noop\n  },\n});\n\nexport interface ControlSetProps {\n  /** Class name */\n  className?: string;\n  /** control selection event */\n  onControlSelect?: (controlId: string) => void;\n  /** If true, selection is required */\n  requireSelection?: boolean;\n  /** Orientation: 'vertical' or 'horizontal' */\n  orientation?: 'vertical' | 'horizontal';\n  /** if true, add spacing for horizontal orientation, similar to button group */\n  segmented?: boolean;\n  /** External value to set the state from */\n  value?: string;\n}\n\nconst ControlSet: FC<ControlSetProps> = ({\n  children,\n  className,\n  onControlSelect,\n  requireSelection = false,\n  orientation = 'horizontal',\n  segmented = false,\n  value,\n  ...otherProps\n}) => {\n  const [selectedControlId, setSelectedControlId] = useState<\n    string | undefined\n  >();\n\n  const handleControlSelect = useCallback(\n    (controlId: string): void => {\n      setSelectedControlId(controlId);\n      if (onControlSelect) {\n        onControlSelect(controlId);\n      }\n    },\n    [onControlSelect],\n  );\n\n  useEffect(() => {\n    value && setSelectedControlId(value);\n  }, [value]);\n  return (\n    <ControlSetContext.Provider\n      value={{\n        selectedControlId,\n        requireSelection,\n        onControlSelect: handleControlSelect,\n      }}\n    >\n      <div\n        {...otherProps}\n        className={classNames(\n          `sb-control-set`,\n          {\n            'sb-control-set_vertical': orientation === 'vertical',\n            'sb-control-set_horizontal': orientation === 'horizontal',\n            'sb-control-set_segmented': segmented,\n          },\n          className,\n        )}\n      >\n        {children}\n      </div>\n    </ControlSetContext.Provider>\n  );\n};\n\nexport default ControlSet;\n"],"names":["root","factory","exports","module","define","amd","a","i","this","__webpack_require__","getter","__esModule","d","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","require","children","className","colorType","controlId","defaultSelected","onToggle","testMetadata","otherProps","useContext","ControlSetContext","selectedControlId","requireSelection","onControlSelect","useState","selected","setSelected","useEffect","handleClick","useCallback","newSelected","classNames","onClick","createContext","undefined","orientation","segmented","setSelectedControlId","handleControlSelect","Provider"],"sourceRoot":""}