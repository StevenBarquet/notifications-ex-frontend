import { ClassAttributes, DetailedHTMLProps, FC, InputHTMLAttributes } from 'react';
import './Input.scss';
import { TestMetadata } from 'types';
import { TAnalyticsEventData } from '@dtci/dash/analytics';
export interface InputProps extends DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement> {
    /** value of the input field */
    value?: number | string;
    /** Boolean to determine if field is required */
    required?: boolean;
    /** If label is not visible, use aria-label for screen readers */
    labelText?: string;
    /** ref form inner input **/
    inputRef?: ClassAttributes<HTMLInputElement>['ref'];
    /** Width of the Input */
    width?: 'small' | 'medium' | 'large' | 'auto';
    'data-testid'?: string;
    testMetadata?: TestMetadata;
    /** Error State */
    isError?: boolean;
    /** Disabled State */
    isDisabled?: boolean;
    /** Border Flush */
    flush?: 'left' | 'right' | 'flush';
    /** Indicate if input should have a border */
    bordered?: boolean;
    /** Additional event information to pass to analytics tracking */
    analyticsEventData?: TAnalyticsEventData;
}
/** Input components are useful for editing text in forms */
declare const Input: FC<InputProps>;
export default Input;
