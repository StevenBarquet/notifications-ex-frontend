/// <reference types="react" />
import { RegisterOptions, Path } from 'react-hook-form';
import { FormFieldProps } from '../FormField';
import { RadioProps } from '../RadioButtons';
import './FormRadioField.scss';
import { FormCheckboxFieldOption, TestMetadata } from '../types';
export interface FormRadioFieldProps<I extends Record<string, unknown>> {
    /** Name for field (Unique in the form) */
    fieldName: Path<I>;
    /** Display name for field */
    labelText?: string;
    /** Tooltip icon and hover text */
    tooltip?: string[];
    /** Sets helper */
    helper?: string;
    /** Mark field required (*) */
    required?: boolean;
    /** Rules to pass down to control */
    rules?: RegisterOptions;
    /** Props for the input tag */
    inputProps?: Partial<RadioProps['inputProps']>;
    /** Class name */
    className?: string;
    horizontal?: boolean;
    /** Check box options such name and id */
    options?: FormCheckboxFieldOption[];
    /** Sets test id */
    testMetadata?: {
        wrapper?: TestMetadata;
        input?: TestMetadata;
    };
    defaultValue?: unknown;
}
declare const FormRadioField: <I extends Record<string, unknown>>({ fieldName, required, rules, inputProps, labelText, tooltip, helper, className, horizontal, options, testMetadata, readOnly, defaultValue, truncate, ...otherProps }: FormRadioFieldProps<I> & Partial<FormFieldProps<I>>) => JSX.Element;
export default FormRadioField;
