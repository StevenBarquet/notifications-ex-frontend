import { FC, ReactNode } from 'react';
import './Table.scss';
import { SpacingOptions, TestMetadata } from 'types';
type responsive = 'xl' | 'lg' | 'md' | 'sm' | 'xs';
type pinnedColumn = 'first' | 'last' | 'both';
export interface TableProps {
    /**
     * Table Content
     */
    children?: ReactNode;
    /**
     * Table's classnames.
     */
    className?: string;
    /**
     * Table Wrapper's classnames.
     */
    wrapperClassName?: string;
    /**
     * Use 'xl' | 'lg' | 'md' | 'sm' | 'xs' as needed to create responsive tables up to a particular breakpoint. From that breakpoint and up, the table will behave normally and not scroll horizontally.
     */
    responsive?: responsive;
    /**
     * Table's border. Use 'horizontal' | 'vertical' | true
     */
    bordered?: 'horizontal' | 'vertical' | 'rows' | true;
    /**
     * Removes the borders.
     */
    borderless?: boolean;
    /**
     * Table row hover effect
     */
    hover?: boolean;
    /**
     * Make tables compact by cutting cell padding in half.
     */
    small?: boolean;
    /**
     * Make tables larger by doubling cell padding in half.
     */
    large?: boolean;
    /**
     * Adds zebra-striping to any table row within the <tbody>.
     */
    striped?: boolean;
    /**
     * Pins first, last or both columns
     */
    pinnedColumn?: pinnedColumn;
    /**
     * Any additional component after table.
     */
    afterTable?: ReactNode;
    /**
     * Space in-between rows.
     */
    rowSpace?: SpacingOptions;
    testMetadata?: TestMetadata;
}
declare const Table: FC<TableProps>;
export default Table;
